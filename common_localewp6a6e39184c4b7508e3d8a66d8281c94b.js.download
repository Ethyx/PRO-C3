var en_us = function (n, ord
) {
  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,
      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);
  if (ord) return (n10 == 1 && n100 != 11) ? 'one'
      : (n10 == 2 && n100 != 12) ? 'two'
      : (n10 == 3 && n100 != 13) ? 'few'
      : 'other';
  return (n == 1 && v0) ? 'one' : 'other';
};
var number = function (value, name, offset) {
  if (!offset) return value;
  if (isNaN(value)) throw new Error("Can't apply offset:" + offset + ' to argument `' + name + '` with non-numerical value ' + JSON.stringify(value) + '.');
  return value - offset;
};
var plural = function (value, offset, lcfunc, data, isOrdinal) {
  if ({}.hasOwnProperty.call(data, value)) return data[value];
  if (offset) value -= offset;
  var key = lcfunc(value, isOrdinal);
  return key in data ? data[key] : data.other;
};

(window.locales = window.locales || {}).common_locale = {
  abuseDetail: function(d) { return "Please provide details regarding the content you are reporting"; },
  abuseFormDetail: function(d) { return "Please provide as much detail as possible regarding the content you are reporting."; },
  abuseFormAcknowledge: function(d) { return "By submitting this information, you acknowledge it will be handled in accordance with the terms of the [Privacy Policy](" + d.privacy_url + ") and the [Terms of Service](" + d.tos_url + ")."; },
  abuseType: function(d) { return "Please answer how this content violates the Terms of Service"; },
  abuseTypeHarassment: function(d) { return "Threats, cyberbullying, harassment"; },
  abuseTypeInfringement: function(d) { return "Copyright Infringement"; },
  abuseTypeOffensive: function(d) { return "Offensive content"; },
  abuseTypeOther: function(d) { return "Other"; },
  abuseTypeQuestion: function(d) { return "How does this content violate the [Terms of Service](" + d.url + ")?"; },
  abusiveUrl: function(d) { return "URL of the content being reported"; },
  achievements: function(d) { return "Achievements"; },
  activity: function(d) { return "Activity"; },
  actions: function(d) { return "Actions"; },
  add: function(d) { return "Add"; },
  addNewSection: function(d) { return "Add New Section"; },
  addParentEmailModal_confirmedParentEmail_label: function(d) { return "Confirm parent/guardian email address"; },
  addParentEmailModal_confirmedParentEmail_mustMatch: function(d) { return "Email addresses must match."; },
  addParentEmailModal_parentEmail_invalid: function(d) { return "The email address you provided is not valid."; },
  addParentEmailModal_parentEmail_isRequired: function(d) { return "An email address is required."; },
  addParentEmailModal_parentEmail_label: function(d) { return "Parent/guardian email address"; },
  addParentEmailModal_parentEmail_mustBeDifferent: function(d) { return "New email address must not match old email address."; },
  addParentEmailModal_emailOptIn_label: function(d) { return "For parent/guardian only"; },
  addParentEmailModal_emailOptIn_sublabel: function(d) { return "Only fill out the following question if the email address above belongs to you."; },
  addParentEmailModal_emailOptIn_description: function(d) { return "Can we email you with occasional updates on your child’s progress and projects, and updates about their course and computer science?"; },
  addParentEmailModal_emailOptIn_isRequired: function(d) { return "This field is required."; },
  addParentEmailModal_save: function(d) { return "Update"; },
  addParentEmailModal_subtitle: function(d) { return "This email address will have the ability to recover/reset the password of this account."; },
  addParentEmailModal_title: function(d) { return "Update parent/guardian email address"; },
  addPartners: function(d) { return "Add Partners"; },
  addPassword: function(d) { return "Add a password"; },
  addPasswordHint: function(d) { return "By creating a password below, you will be able to sign in with your username or email address and password. It will also help keep your account safer because then we will prompt you for the password before any updates are made."; },
  addRemoveCleverClassrooms: function(d) { return "Visit https://clever.com/ and confirm your classroom is connected to Code.org."; },
  addRemoveGoogleClassrooms: function(d) { return "Visit https://classroom.google.com/ to add and remove classrooms."; },
  addSectionName: function(d) { return "Enter a name for your section that will help you remember which classroom it is for. Your students will also be able to see this name."; },
  addSectionNameHint: function(d) { return "e.g., Intro to CS - Period 2"; },
  addStudents: function(d) { return "Add students"; },
  addStudentsMultiple: function(d) { return "Add multiple students"; },
  addStudentsMultipleInstructions: function(d) { return "Type or paste the names of your students, one per line."; },
  addStudentsManageMyOwn: function(d) { return "Create and manage my own list of students"; },
  addStudentsSyncThirdParty: function(d) { return "Sync my list of students from an existing classroom section in a third party tool"; },
  addStudentsToSectionInstructions: function(d) { return "Choose how you want to add your students:"; },
  addToProjects: function(d) { return "Add to Projects"; },
  addedToProjects: function(d) { return "Added"; },
  addingToProjects: function(d) { return "Adding..."; },
  administrator: function(d) { return "Administrator"; },
  administratorResourcesDescription: function(d) { return "View these resources to get started on expanding computer science opportunities."; },
  administratorResourcesHeading: function(d) { return "Expand computer science in your school or district"; },
  administrators: function(d) { return "Administrators"; },
  advancedShare: function(d) { return "Show advanced options"; },
  age: function(d) { return "Age"; },
  all: function(d) { return "All"; },
  allHandouts: function(d) { return "All Handouts"; },
  allowEditing: function(d) { return "Allow editing"; },
  allowEditingInstructions: function(d) { return "\"Allow editing\" while students should be taking the assessment."; },
  allStudents: function(d) { return "All students"; },
  and: function(d) { return "and"; },
  animationCategory_all: function(d) { return "All"; },
  animationCategory_animals: function(d) { return "Animals"; },
  animationCategory_backgrounds: function(d) { return "Backgrounds"; },
  animationCategory_characters: function(d) { return "Characters"; },
  animationCategory_environment: function(d) { return "Environment"; },
  animationCategory_food: function(d) { return "Food"; },
  animationCategory_gameplay: function(d) { return "Gameplay"; },
  animationCategory_generic_items: function(d) { return "Generic items"; },
  animationCategory_music: function(d) { return "Music"; },
  animationCategory_obstacles: function(d) { return "Obstacles"; },
  animationCategory_tools: function(d) { return "Tools"; },
  animationCategory_vehicles: function(d) { return "Vehicles"; },
  animationMode: function(d) { return "Animation"; },
  animationPicker_drawYourOwn: function(d) { return "Draw your own"; },
  animationPicker_error: function(d) { return "Error: " + d.message; },
  animationPicker_failedToParseImage: function(d) { return "The image could not be parsed"; },
  animationPicker_title: function(d) { return "Animation Library"; },
  animationPicker_unsupportedType: function(d) { return "Sorry, this file type is not supported."; },
  animationPicker_unsupportedSize: function(d) { return "Please make sure the image you are trying to upload is smaller than 100 KB."; },
  animationPicker_uploadImage: function(d) { return "Upload image"; },
  animationPicker_uploading: function(d) { return "Uploading..."; },
  animationPicker_warning: function(d) { return "Warning: Do not upload anything that contains personal information."; },
  animationSearchPlaceholder: function(d) { return "Search for images..."; },
  announcements: function(d) { return "Announcements"; },
  announcementHeadingBackToSchool: function(d) { return "Get set up for the new school year"; },
  announcementDescriptionBackToSchool: function(d) { return "View our frequently asked questions on how to manage your classroom(s) and start teaching."; },
  announcementButtonBackToSchool: function(d) { return "Read the FAQ"; },
  announcementHeadingFacilitatorApp: function(d) { return "Join our Facilitator Development Program"; },
  announcementDescriptionFacilitatorApp: function(d) { return "Help teachers by delivering professional learning workshops on Code.org's curriculum."; },
  announcementHeadingPrivacyGdpr: function(d) { return "We are updating our privacy policy"; },
  announcementDescriptionPrivacyGdpr: function(d) { return "We care about your privacy and are making some updates to our privacy policy, effective May 25."; },
  announcementHeadingYouTubeNoCookie: function(d) { return "Updated IT requirements for viewing captions on Code.org videos"; },
  announcementDescriptionYouTubeNoCookie: function(d) { return "We are updating our IT requirements for the upcoming school year which may affect some schools' ability to access closed captioning and translations on videos. This change will go into effect in late July."; },
  anotherHoCButton: function(d) { return "Continue learning"; },
  anotherHoCDesc: function(d) { return "Keep it up! Try your next Hour of Code activity."; },
  anotherHoCTitle: function(d) { return "Try another Hour of Code"; },
  answer: function(d) { return "Answer"; },
  answerOptionA: function(d) { return "A"; },
  answerOptionB: function(d) { return "B"; },
  answerOptionC: function(d) { return "C"; },
  answerOptionD: function(d) { return "D"; },
  answerOptionE: function(d) { return "E"; },
  answerOptionF: function(d) { return "F"; },
  answerOptionG: function(d) { return "G"; },
  answersVisible: function(d) { return "Answers visible (read-only)"; },
  applabMarketingButton: function(d) { return "Learn more"; },
  applabMarketingDesc: function(d) { return "See sample projects, watch demos, and learn more about what you can do with App Lab."; },
  applabMarketingTitle: function(d) { return "Learn about App Lab"; },
  applabProjectButton: function(d) { return "Create a project"; },
  applabProjectDesc: function(d) { return "Now that you’ve gotten an introduction to App Lab, create your own app - try making a quiz, a story, or a simple game."; },
  applabProjectTitle: function(d) { return "Create a new App"; },
  applabTutorialButton: function(d) { return "Start"; },
  applabTutorialDesc: function(d) { return "Ready to try JavaScript? Design an app, code in JavaScript with either blocks or text, then share your app in seconds. For Ages 13+."; },
  applabTutorialTitle: function(d) { return "App Lab Hour of Code"; },
  archiveSection: function(d) { return "Archive Section"; },
  archivedSections: function(d) { return "Archived Sections"; },
  assessmentAndSurvey: function(d) { return "Assessments / Surveys"; },
  assessmentSteps: function(d) { return "Steps to give assessment for"; },
  assessmentSettings: function(d) { return "Assessment Settings"; },
  assign: function(d) { return "Assign"; },
  assignACourse: function(d) { return "Assign a course to your classroom or start your own course."; },
  assignCourse: function(d) { return "Assign Course"; },
  assignConfirm: function(d) { return "Are you sure you want to assign \"" + d.assignmentName + "\" to \"" + d.sectionName + "\"?"; },
  assignHiddenUnitConfirm: function(d) { return "It looks like you previously hid \"" + d.assignmentName + "\" from section \"" + d.sectionName + "\". Do you still want to assign this unit and make it visible?"; },
  assigned: function(d) { return "Assigned"; },
  assignedTo: function(d) { return "Assigned to"; },
  assignedToWithColon: function(d) { return "Assigned to:"; },
  assignToSection: function(d) { return "Assign to section"; },
  assignUnit: function(d) { return "Assign Unit"; },
  assignedToNewerVersion: function(d) { return "Your teacher assigned you to a newer version of this course."; },
  assignmentSelectorCourse: function(d) { return "Select course"; },
  assignmentSelectorVersion: function(d) { return "Version"; },
  assignmentSelectorUnit: function(d) { return "Select current unit"; },
  atHomeBannerBody1: function(d) { return "Support for parents and teachers facing school closures."; },
  atHomeBannerBody2: function(d) { return "See our suggested learning resources."; },
  atHomeBannerLinkText: function(d) { return "Get started"; },
  audioInitializeError: function(d) { return "Your computer is not set-up to record audio. Please ensure you have a microphone with permission to access audio on this website."; },
  audioSaveError: function(d) { return "There's been an error saving your recording. Please re-record and try again. If this issue persists, please refresh the page and try again."; },
  authorizeGoogleClassrooms: function(d) { return "To authorize Google Classroom, click here."; },
  authorizeGoogleClassroomsText: function(d) { return "In order to sync with Google Classroom, Code.org must have up-to-date authorization to access your Google Classroom account."; },
  authorName: function(d) { return "**Author:** " + d.name; },
  autoGenerated: function(d) { return "Auto-generated"; },
  autolock: function(d) { return "Note: Stage auto-locks after 24 hours."; },
  availableLessons: function(d) { return " Available in " + plural(d.numLessons, 0, en_us, { one: "1 Lesson", other: number(d.numLessons, "numLessons") + " Lessons" }) + ":"; },
  back: function(d) { return "Back"; },
  backToActivity: function(d) { return "Back to activity"; },
  backToPreviousLevel: function(d) { return "Back to previous level"; },
  backToTop: function(d) { return "Back to top"; },
  barChart: function(d) { return "Bar Chart"; },
  behaviorEditorHeader: function(d) { return "Behavior"; },
  behaviorEditorLabel: function(d) { return "Name your behavior:"; },
  behaviorEditorDescription: function(d) { return "What is your behavior supposed to do?"; },
  beta: function(d) { return "beta"; },
  betterThanPerfectDescription: function(d) { return "WOW!"; },
  blocklyMessage: function(d) { return "Blockly"; },
  blocks: function(d) { return "blocks"; },
  booleanFalse: function(d) { return "false"; },
  booleanTrue: function(d) { return "true"; },
  bothSectionsQuestion: function(d) { return "Would you like the student(s) to be in both sections?"; },
  bottomCenter: function(d) { return "bottom center"; },
  bottomLeft: function(d) { return "bottom left"; },
  bottomRight: function(d) { return "bottom right"; },
  builtOnCodeStudio: function(d) { return "Built on Code Studio"; },
  by: function(d) { return "By"; },
  cancel: function(d) { return "Cancel"; },
  cannotDeleteLibrary: function(d) { return "You cannot delete preset libraries"; },
  cannotDeleteUsedImage: function(d) { return "You cannot delete images that are currently used in your project"; },
  catActions: function(d) { return "Actions"; },
  catColour: function(d) { return "Color"; },
  catLists: function(d) { return "Lists"; },
  catLogic: function(d) { return "Logic"; },
  catLoops: function(d) { return "Loops"; },
  catMath: function(d) { return "Math"; },
  catProcedures: function(d) { return "Functions"; },
  catText: function(d) { return "Text"; },
  catVariables: function(d) { return "Variables"; },
  celebrityChallenge: function(d) { return "Celebrity challenge"; },
  censusBlockBased: function(d) { return "Block-based programming"; },
  censusConnection: function(d) { return "What is your connection to this school?"; },
  censusCybersecurity: function(d) { return "Cybersecurity"; },
  censusDataAnalysis: function(d) { return "Data analysis"; },
  censusEmail: function(d) { return "What is your email address?"; },
  censusExistingInaccuracy: function(d) { return "I believe that the computer science categorization for this school is inaccurate"; },
  censusExistingInaccuracyReason: function(d) { return "Explain why you think that the categorization for this school is inaccurate:"; },
  censusExistingInaccuracyTip: function(d) { return "If you think that we've incorrectly categorized the school as teaching or not teaching CS, please check this box. We will review your request."; },
  censusExistingInaccuracyTipLink: function(d) { return "Read more about how we define computer science and categorize schools."; },
  censusEthicalSocial: function(d) { return "Ethical and social issues in computing"; },
  censusFollowUpFrequency: function(d) { return "How often per week does this class meet?"; },
  censusFollowUp: function(d) { return "Your school offers a semester or year long computer science class! What topics does this course include?"; },
  censusFollowUpTellUsMore: function(d) { return "Please tell us more about this course. For example, name of the class, how often it meets, description of what is taught."; },
  censusFrequency1: function(d) { return "< 1 hour per week"; },
  censusFrequency1to3: function(d) { return "1-3 hours per week"; },
  censusFrequency3plus: function(d) { return "3+ hours per week"; },
  censusHeading: function(d) { return "Tell us about your school"; },
  censusGameDesign: function(d) { return "Game design using game layout tools without coding or computer programming"; },
  censusHowManyAfterSchool: function(d) { return "How many students do computer programming in an after-school program?"; },
  censusHowManyHoC: function(d) { return "How many students do an Hour of Code?"; },
  censusHowManyTenHours: function(d) { return "How many students take at least 10 hours of computer programming integrated into a non-Computer Science course (such as TechEd, Math, Science, Art, Library or general classroom/homeroom)?"; },
  censusHowManyTwentyHours: function(d) { return "How many students take a semester or year-long computer science course that includes at least 20 hours of coding/computer programming?"; },
  censusInternet: function(d) { return "Internet and networking"; },
  censusInvalidEmail: function(d) { return "Please enter a valid email address"; },
  censusOtherCourse: function(d) { return "This school teaches other computing classes that do not include at least 20 hours of coding/computer programming. (For example, learning to use applications, computer literacy, web design, HTML/CSS, or other)"; },
  censusOtherDescribe: function(d) { return "Other (please describe below)"; },
  censusOtherDescribeHere: function(d) { return "Other (please describe):"; },
  censusPhysicalComputing: function(d) { return "Robotics / Physical Computing"; },
  censusPledge: function(d) { return "I pledge to expand computer science offerings at my school, and to engage a diverse group of students, to bring opportunity to all."; },
  censusRequired: function(d) { return "You are missing one or more required fields."; },
  censusRequiredEmail: function(d) { return "Required. Please enter your email."; },
  censusRequiredExistingInaccuracyReason: function(d) { return "Required. Please enter a reason."; },
  censusRequiredSchool: function(d) { return "Required. Please enter your school information."; },
  censusRequiredShare: function(d) { return "Required. Please let us know if we can share your information."; },
  censusRequiredSelect: function(d) { return "Required. Please select an option."; },
  censusTextBased: function(d) { return "Text-based programming in a language such as Java, JavaScript, Python, C++, etc. (Excluding HTML or CSS)"; },
  censusWebDesign: function(d) { return "Web design using HTML or CSS"; },
  challengeLevelIntro: function(d) { return "Challenge Puzzles are lessons designed to stretch your brain! Just do the best that you can!"; },
  challengeLevelPassTitle: function(d) { return "You did it!"; },
  challengeLevelPassText: function(d) { return "However, you could've done it with only " + plural(d.idealBlocks, 0, en_us, { one: "1 block", other: number(d.idealBlocks, "idealBlocks") + " blocks" }) + ". Can you make your program even better?"; },
  challengeLevelPerfectTitle: function(d) { return "Challenge Complete!"; },
  challengeLevelSkip: function(d) { return "Skip for now"; },
  challengeLevelStart: function(d) { return "I'm ready!"; },
  challengeLevelTitle: function(d) { return "Challenge Puzzle!"; },
  changeEmailModal_currentPassword_isRequired: function(d) { return "Current password is required."; },
  changeEmailModal_currentPassword_label: function(d) { return "Current password"; },
  changeEmailModal_emailOptIn_description: function(d) { return "Can we email you about updates to our courses, local opportunities, or other computer science news?"; },
  changeEmailModal_emailOptIn_isRequired: function(d) { return "This field is required."; },
  changeEmailModal_emailOptIn_privacyPolicy: function(d) { return "(See our privacy policy)"; },
  changeEmailModal_newEmail_invalid: function(d) { return "The email address you provided is not valid."; },
  changeEmailModal_newEmail_isRequired: function(d) { return "A new email address is required."; },
  changeEmailModal_newEmail_mustBeDifferent: function(d) { return "New email address must not match old email address."; },
  changeEmailModal_newEmail_label: function(d) { return "New email address"; },
  changeEmailModal_save: function(d) { return "Update email address"; },
  changeEmailModal_title: function(d) { return "Update email address"; },
  changeEmailModal_unexpectedError: function(d) { return "An unexpected error has occurred.  Please wait a moment and try again."; },
  checkCorrectAnswer: function(d) { return "Correct answer"; },
  changeUserTypeModal_email_invalid: function(d) { return "The email address you provided is not valid."; },
  changeUserTypeModal_email_isRequired: function(d) { return "An email address is required."; },
  changeUserTypeModal_email_label: function(d) { return "Primary email address"; },
  changeUserTypeModal_email_labelDetails: function(d) { return "(Make sure you can receive emails to this email address.)"; },
  changeUserTypeModal_email_mustMatch: function(d) { return "Email must match an existing email associated with your account."; },
  changeUserTypeModal_emailOptIn_description: function(d) { return "Can we email you about updates to our courses, local opportunities, or other computer science news?"; },
  changeUserTypeModal_emailOptIn_isRequired: function(d) { return "This field is required."; },
  changeUserTypeModal_emailOptIn_privacyPolicy: function(d) { return "(See our privacy policy)"; },
  changeUserTypeModal_description_toTeacher: function(d) { return "You must provide the following information before we can convert your account into a teacher account.  Once you convert to a teacher account, any parent/guardian email address currently linked to your account will be removed."; },
  changeUserTypeModal_save_teacher: function(d) { return "Update to teacher account"; },
  changeUserTypeModal_title: function(d) { return "Update account type"; },
  changeUserTypeModal_unexpectedError: function(d) { return "An unexpected error has occurred.  Please wait a moment and try again."; },
  choiceLevel: function(d) { return "Choice level"; },
  choose: function(d) { return "Choose"; },
  chooseActivity: function(d) { return "Choose from the following activities:"; },
  chooseColumn: function(d) { return "Choose a column from \"" + d.table + "\""; },
  choosePrefix: function(d) { return "Choose..."; },
  chooseSection: function(d) { return "Choose Section"; },
  chooseTable: function(d) { return "Choose a table"; },
  classProgress: function(d) { return "Class Progress"; },
  clearPuzzle: function(d) { return "Start Over"; },
  clearPuzzleConfirm: function(d) { return "This will reset the puzzle to its start state and delete all the blocks you've added or changed."; },
  clearPuzzleConfirmHeader: function(d) { return "Are you sure you want to start over?"; },
  clearResponse: function(d) { return "Clear Response"; },
  clickToRemix: function(d) { return "Click \"Remix\" to spin-off your own version!"; },
  closeAndSave: function(d) { return "Close and save"; },
  closeDialog: function(d) { return "Close"; },
  chooseSounds: function(d) { return "Choose Sounds"; },
  code: function(d) { return "Code:"; },
  codeIntroduced: function(d) { return "Code Introduced"; },
  codeMode: function(d) { return "Code"; },
  codeTooltip: function(d) { return "See generated JavaScript code."; },
  commentPrefix: function(d) { return "comment:"; },
  commentTooltip: function(d) { return "Leave a message for yourself, or anyone else reading your code."; },
  completed: function(d) { return "Completed"; },
  completedLevels: function(d) { return "Completed Levels"; },
  completedLessons: function(d) { return "Completed Lessons"; },
  completedStudentPercent: function(d) { return d.percentComplete + "% of students completed"; },
  completedUnpluggedLessons: function(d) { return "Tell us which unplugged lessons* your class has completed"; },
  completedWithoutRecommendedBlock: function(d) { return "Congratulations! You completed Puzzle " + d.puzzleNumber + ". (But you could use a different block for stronger code.)"; },
  completionStatus: function(d) { return "Completion Status"; },
  concept: function(d) { return "Concept"; },
  confirmClearTable: function(d) { return "Do you really want to delete all data from this table? You cannot undo this action."; },
  confirmDeleteExplanation: function(d) { return "Deleting this file will remove it everywhere in your project"; },
  confirmImportOverwrite: function(d) { return "Importing this file will overwrite the existing data in this table. Are you sure you want to continue?"; },
  confirming: function(d) { return "Confirming..."; },
  confirmSchool: function(d) { return "Confirm School"; },
  congratsCertificateHeading: function(d) { return "You Earned a Certificate of Completion"; },
  congratsCertificatePersonalize: function(d) { return "Personalize your certificate"; },
  congratsCertificateShare: function(d) { return "Share your achievement"; },
  congratsCertificateThanks: function(d) { return "Thanks for submitting!"; },
  congratsCertificateContinue: function(d) { return "Now, keep going with our other courses, or see more options to Learn beyond an Hour below."; },
  congratsStudentHeading: function(d) { return "Students: Continue Learning Beyond an Hour"; },
  congratsStudentHeadingNonEng: function(d) { return "Continue Learning Beyond an Hour"; },
  congratsTeacherCodeOrgButton: function(d) { return "Explore Code.org Courses"; },
  congratsTeacherCodeOrgDesc: function(d) { return "Code.org offers courses across K-12 at no cost to schools. And, if you’d like help getting started, we have hands-on professional learning workshops around the country."; },
  congratsTeacherCodeOrgTitle: function(d) { return "Teach courses by Code.org"; },
  congratsTeacherExternalButton: function(d) { return "Explore 3rd party Options"; },
  congratsTeacherExternalDesc: function(d) { return "Compare options by different partners, organized by grade band."; },
  congratsTeacherExternalTitle: function(d) { return "Teach courses by other providers"; },
  congratsTeacherExternalTitleShort: function(d) { return "Other providers' courses"; },
  congratsTeacherHeading: function(d) { return "Teachers: Bring Computer Science to Your Classroom"; },
  connectToday: function(d) { return "Connect Today"; },
  contactGeneralSupport: function(d) { return "Still having trouble? You can contact us at [support@code.org](mailto:support@code.org) with any additional questions."; },
  contactSupport: function(d) { return "Please contact teacher@code.org for any questions or concerns."; },
  contactToContinue: function(d) { return "Please contact teacher@code.org to continue."; },
  contactUs: function(d) { return "If you believe this to be an error, please [contact us](" + d.url + ")."; },
  contactWithoutEmail: function(d) { return "If you have any questions, please contact us: "; },
  containedLevelRunDisabledTooltip: function(d) { return "You need to answer the question before you can run the code"; },
  "continue": function(d) { return "Continue"; },
  continueLesson: function(d) { return "Continue lesson"; },
  contractMatchBadDomainName: function(d) { return "One or more of your domain items has the wrong name."; },
  contractMatchBadDomainSize: function(d) { return "Your contract doesn't have the right number of items in the domain."; },
  contractMatchBadDomainType: function(d) { return "One or more of your domain items has the wrong type, or they are in the wrong order."; },
  contractMatchBadName: function(d) { return "Your contract has the wrong name."; },
  contractMatchBadNameCase: function(d) { return "Function names are case-sensitive. Try changing the case of your contract's name."; },
  contractMatchBadRange: function(d) { return "Your contract has the wrong range."; },
  controlProjectSharing: function(d) { return "Control project sharing"; },
  copied: function(d) { return "Copied!"; },
  copy: function(d) { return "Copy"; },
  copyId: function(d) { return "Copy ID"; },
  copySectionCodeSuccess: function(d) { return "Link copied!"; },
  copySectionCodeTooltip: function(d) { return "Click here to copy the link students need to join the section"; },
  copyStudentsConfirm: function(d) { return "Yes, I want to copy student(s) to be in this current section AND the new section."; },
  copyright: function(d) { return "Copyright"; },
  correct: function(d) { return "Correct"; },
  correctAnswer: function(d) { return "That is the correct answer."; },
  costumeCategoryAll: function(d) { return "All"; },
  costumeCategoryAnimals: function(d) { return "Animals"; },
  costumeCategoryCharacters: function(d) { return "Characters"; },
  costumeCategoryEnvironment: function(d) { return "Environment"; },
  costumeCategoryFood: function(d) { return "Food"; },
  costumeCategoryGameplay: function(d) { return "Gameplay"; },
  costumeCategoryGenericItems: function(d) { return "Generic items"; },
  costumeCategoryObstacles: function(d) { return "Obstacles"; },
  costumeCategoryTools: function(d) { return "Tools"; },
  costumeCategoryVehicles: function(d) { return "Vehicles"; },
  costumeMode: function(d) { return "Costumes"; },
  count: function(d) { return "Count"; },
  country: function(d) { return "Country"; },
  course: function(d) { return "Course"; },
  courseBlocksCsfExpressHeading: function(d) { return "Computer Science Fundamentals Express Courses"; },
  courseBlocksCsfExpressDescription: function(d) { return "A great option for students getting started on their own.  You'll learn the fundamentals of computer science with drag & drop blocks.  Create your own drawings and games."; },
  courseBlocksCsfYoungHeading: function(d) { return "Computer Science Fundamentals for Elementary Schools"; },
  courseBlocksCsfYoungDescription: function(d) { return "For pre-readers in elementary school classrooms"; },
  courseBlocksCsfOlderHeading: function(d) { return ""; },
  courseBlocksCsfOlderDescription: function(d) { return "For older students in elementary school classrooms"; },
  courseBlocksGradeBands612: function(d) { return "Grades 6-12"; },
  courseBlocksGradeBands612Description: function(d) { return "Build real working apps, games and websites using blocks, JavaScript, CSS, HTML and more."; },
  courseBlocksGradeBandsContainerDescription: function(d) { return "Browse our catalog of courses from Code Studio and 3rd party partners."; },
  courseBlocksGradeBandsContainerHeading: function(d) { return "Full course catalog"; },
  courseBlocksGradeBandsElementary: function(d) { return "Elementary School"; },
  courseBlocksGradeBandsElementaryDescription: function(d) { return "Teachers say our elementary courses are \"totally awesome sauce\" and fun for all students, even pre-readers."; },
  courseBlocksGradeBandsHigh: function(d) { return "High School"; },
  courseBlocksGradeBandsHighDescription: function(d) { return "We offer two year-long courses for high school: an intro course and an AP course. Both are designed to broaden participation in computer science."; },
  courseBlocksGradeBandsK5: function(d) { return "Grades K-5"; },
  courseBlocksGradeBandsK5Description: function(d) { return "Learn to make your own game, app, or computer drawing."; },
  courseBlocksGradeBandsMiddle: function(d) { return "Middle School"; },
  courseBlocksGradeBandsMiddleDescription: function(d) { return "Our new middle school course can be offered as a semester or year-long introduction to computer science for all students."; },
  courseBlocksGradeBandsUniversity: function(d) { return "Beyond K-12"; },
  courseBlocksGradeBandsUniversityDescription: function(d) { return "Go beyond Code.org and continue your path in computer science. Browse online schools and courses."; },
  courseBlocksInternationalGradeBandsContainerDescription: function(d) { return "Below is the catalog of all of our courses and great options from third parties. Please note that some of these are only in English. Don't worry -- we're working on getting these courses translated into your language. Thanks for your patience!"; },
  courseBlocksInternationalGradeBandsContainerHeading: function(d) { return "Full course catalog (English only)"; },
  courseBlocksInternationalGradeBandsElementary: function(d) { return "Ages 4-11"; },
  courseBlocksInternationalGradeBandsElementaryDescription: function(d) { return "CS Fundamentals offers a variety of courses for students to explore programming concepts, computational thinking, digital citizenship, and to develop interactive games and stories."; },
  courseBlocksInternationalGradeBandsHigh: function(d) { return "Ages 14-18+"; },
  courseBlocksInternationalGradeBandsHighDescription: function(d) { return "We offer two courses for secondary school: CS Discoveries and CS Principles. Both are designed to broaden participation in computer science."; },
  courseBlocksInternationalGradeBandsMiddle: function(d) { return "Ages 10-16"; },
  courseBlocksInternationalGradeBandsMiddleDescription: function(d) { return "As flexible courses that can be taught in a unit, semester, or full year, CS Discoveries and CS Fundamentals Express introduce students to app design, JavaScript programming, physical computing, and more."; },
  courseBlocksLegacyNotificationHeading: function(d) { return "CS Fundamentals Courses 1-4 & the Accelerated Course"; },
  courseBlocksLegacyNotificationBody: function(d) { return "Were you using Courses 1-4 or the Accelerated Course? They’re still available! Our transition guide will help you find the right course for your classroom."; },
  courseBlocksLegacyNotificationButtonCourses14: function(d) { return "Courses 1-4"; },
  courseBlocksLegacyNotificationButtonCoursesAccelerated: function(d) { return "Accelerated Course"; },
  courseBlocksLegacyNotificationDetailsLinkText: function(d) { return "Review the transition guide."; },
  courseBlocksToolsTitleTeacher: function(d) { return "Tools and resources for your classroom"; },
  courseBlocksToolsTitleNonEn: function(d) { return "Tools for middle and high school (English only)"; },
  courseBlocksToolsDescription: function(d) { return "In addition to our courses, teachers can use tools to teach students how to create apps, animations, games, or websites. We also have lessons and widgets to teach encryption, text compression, and other computer science concepts. Browse our other resources to inspire students with posters, videos, or by inviting guest speakers."; },
  courseBlocksToolsAppLab: function(d) { return "App Lab"; },
  courseBlocksToolsAppLabDescription: function(d) { return "App Lab is a programming environment where you can make simple apps. Design an app, code with blocks or JavaScript to make it work, then share your app in seconds."; },
  courseBlocksToolsGameLab: function(d) { return "Game Lab"; },
  courseBlocksToolsGameLabDescription: function(d) { return "Game Lab is a programming environment where you can make simple animations and games with objects and characters that interact with each other."; },
  courseBlocksToolsWebLab: function(d) { return "Web Lab (beta)"; },
  courseBlocksToolsWebLabDescription: function(d) { return "Web Lab is a programming environment where you can make simple web pages using HTML and CSS. Design your web pages and share your site in seconds."; },
  courseBlocksToolsWidgets: function(d) { return "Widgets"; },
  courseBlocksToolsWidgetsDescription: function(d) { return "Students can explore concepts from our CS Principles course hands-on using these digital tools. Use the widgets on their own, or create a single-concept lesson for your class."; },
  courseBlocksToolsInspire: function(d) { return "Inspire a student"; },
  courseBlocksToolsInspireDescription: function(d) { return "Find a volunteer guest speaker or use these videos, posters, and how-to resources to inspire students to try computer science."; },
  courseBlocksToolsVideo: function(d) { return "Video Library"; },
  courseBlocksToolsVideoDescription: function(d) { return "These videos can be used in any computer science course to support learning."; },
  courseCatalogButton: function(d) { return "View Course Catalog"; },
  courseCatalogDescription: function(d) { return "Code.org offers courses across K-12 at no cost to schools. And, if you’d like help getting started, we also offer online professional learning at no cost."; },
  courseCatalogTitle: function(d) { return "Course Catalog"; },
  courseExplorerHeading: function(d) { return "Recommended Code.org courses"; },
  courseExplorerDescription: function(d) { return "Courses from Code.org for students in grades K-12 and professional learning for teachers."; },
  courses: function(d) { return "Courses"; },
  coursesCardAction: function(d) { return "Find a course"; },
  coursesCardDescription: function(d) { return "Find a new course to keep challenging yourself."; },
  coursesLearnHeroButton: function(d) { return "Get started"; },
  coursesLearnHeroDescription: function(d) { return "Get started coding today. Our courses and activities are free! It’s easier - and way more fun - than you ever thought. Create an account to save your projects."; },
  coursesLearnHeroHeading: function(d) { return "Anyone can learn computer science"; },
  coursesLearnHeroSubHeading: function(d) { return d.studentsCount + " million students have learned on Code.org!"; },
  coursesTeachHeroButton: function(d) { return "Get started"; },
  coursesTeachHeroDescription: function(d) { return "More than one million teachers have brought CS to their students using Code.org. We make it easy, no matter your background. "; },
  coursesTeachHeroHeading: function(d) { return "You can teach computer science"; },
  coursesTeachHeroSubHeading: function(d) { return "You don't have to be a software developer to teach computer science."; },
  courseOverviewVersionLabel: function(d) { return "Version:"; },
  create: function(d) { return "Create"; },
  createAccount: function(d) { return "Create an account"; },
  createAccountApplabDesc: function(d) { return "With an account, you can save your progress. You can work on your App Lab project later, play it on your phone, or share it with friends."; },
  createAccountDesc: function(d) { return "Join Code.org! With an account you’ll be able to save your course progress, keep your apps and games, and share your favorites in the public gallery."; },
  createAccountToShare: function(d) { return "Create a Code.org account to share your project"; },
  createAccountToShareDescription: function(d) { return "You must create a Code.org account before you can share and publish your project. Creating an account will also let you save your progress and continue to work on your project later."; },
  createBlocklyBehavior: function(d) { return "Create a Behavior"; },
  createNewClassroom: function(d) { return "Create a new classroom section to start assigning courses and seeing your student progress."; },
  createPassword: function(d) { return "Create a password"; },
  createSection: function(d) { return "Create a section"; },
  createSectionsInfo: function(d) { return "Create new sections and add students to them. Sections help you organize students into smaller groups so you can track their progress and manage their accounts."; },
  createReport: function(d) { return "Create report"; },
  createStandardsReport: function(d) { return "Generate a PDF copy of this report"; },
  createStandardsReportPage1Body: function(d) { return "This report can be easily printed or emailed to administrators, parents, or other teachers. Before we generate it, let's make sure it contains the most up-to-date information."; },
  createStandardsReportSampleNoteText: function(d) { return "This note will appear in the report."; },
  createStandardsReportStep1: function(d) { return "Step 1:"; },
  createStandardsReportStep2: function(d) { return "Step 2: Add a personalized note to your report"; },
  createStandardsReportPrompt: function(d) { return "Say more about what’s happening in your classroom. "; },
  createStandardsReportSuggestion: function(d) { return "**Suggestions:**"; },
  createStandardsReportSuggestion1: function(d) { return "Describe what your class is working on"; },
  createStandardsReportSuggestion2: function(d) { return "Explain how your computer science lessons relate to other subjects or standards"; },
  createStandardsReportSuggestion2Link: function(d) { return "Explain how your computer science lessons relate to [other subjects or standards](" + d.standardsOverviewLink + ")"; },
  createStandardsReportSuggestion4: function(d) { return "[Add a link to a student project](" + d.projectsLink + ")"; },
  createTableHeader: function(d) { return "Create data tables to store rows of data with multiple columns for different fields."; },
  crossTab: function(d) { return "Cross Tab"; },
  csf: function(d) { return "Computer Science Fundamentals"; },
  csfDescription: function(d) { return "Start learning an introduction to computer science on Code Studio with these 20 hour courses for all ages."; },
  csfAcceleratedDesc: function(d) { return "Keep going with our intro course! Learn the fundamentals of computer science with drag & drop blocks. Create your own drawings and games."; },
  csfAcceleratedTitle: function(d) { return "CS Fundamentals"; },
  csfButton: function(d) { return "Try the course "; },
  csfExpressDesc: function(d) { return "Keep going with our intro course! Learn the fundamentals of computer science with drag & drop blocks. Create your own drawings and games."; },
  csfExpressTitle: function(d) { return "CS Fundamentals Express"; },
  CSTAStandards: function(d) { return "Computer Science Teachers Association’s (CSTA) standards"; },
  CSTAStandardsIn: function(d) { return "CSTA Standards in"; },
  CSTAStandardsPracticed: function(d) { return "CSTA standards practiced"; },
  currentCourse: function(d) { return "Current course"; },
  currentSection: function(d) { return "Current section"; },
  currentUnit: function(d) { return "Current unit:"; },
  currentVersion: function(d) { return "Current Version"; },
  curriculum: function(d) { return "Curriculum"; },
  curriculumGuide: function(d) { return "Curriculum Guide"; },
  danceAfterPartyButton: function(d) { return "Go Beyond"; },
  danceAfterPartyDesc: function(d) { return "Go beyond the first hour with extended Dance Party project ideas."; },
  danceAfterPartyTitle: function(d) { return "Keep Dancing"; },
  dancePartyButton: function(d) { return "Start"; },
  dancePartyDesc: function(d) { return "Code a Dance Party to share with your friends!"; },
  dancePartyTitle: function(d) { return "Dance Party"; },
  dataLimitAlert: function(d) { return "The app has been reading or writing to the database too frequently, which may result in unexpected failures.  Please let the app owner know if you keep experiencing issues."; },
  dataMode: function(d) { return "Data"; },
  dataTabExplanation: function(d) { return "Your app can store data (like high scores and survey results) that gets saved even after you reset your app. Before you run your app, use this tab to plan out your key/value pairs or your data tables. You can enter, edit, and delete data directly from this tab or by using the data blocks within your app."; },
  dataTableCaption: function(d) { return "Create data tables to store rows of data with multiple columns for different fields."; },
  dataTableHeader: function(d) { return "DATA TABLES"; },
  dataTableNamePlaceholder: function(d) { return "Table name"; },
  dataLibraryHeader: function(d) { return "Data Library"; },
  dataLibraryDescription: function(d) { return "Want to use a dataset not listed here? [Help us add more datasets](https://support.code.org/hc/en-us/articles/360044953271-Help-us-add-new-data-sets-into-App-Lab-)."; },
  dataLibrarySearchPlacholder: function(d) { return "Search"; },
  dataSource: function(d) { return "Data Source"; },
  dataVisualizerPlaceholderText: function(d) { return "Select values to generate a visualization"; },
  dataVisualizerBucketSize: function(d) { return "Bucket Size"; },
  dataVisualizerCreateChart: function(d) { return "Create chart on screen"; },
  dataVisualizerChartTitle: function(d) { return "Chart Title"; },
  dataVisualizerChartType: function(d) { return "Chart Type"; },
  dataVisualizerFilterDescription: function(d) { return "Filtered " + d.column + " to " + d.value; },
  dataVisualizerValues: function(d) { return "Values"; },
  dataVisualizerXValues: function(d) { return "X Values"; },
  dataVisualizerYValues: function(d) { return "Y Values"; },
  dataVisualizerViewSnapshot: function(d) { return "View Snapshot"; },
  dataVisualizerSnapshotDescription: function(d) { return "Created using Code.org App Lab on " + d.date + " from the " + d.table + " table in project " + d.project; },
  dataWorkspaceHeader: function(d) { return "Data Browser"; },
  dateWithColon: function(d) { return "Date:"; },
  dateUpdatedByTeacher: function(d) { return "Date Updated By Teacher"; },
  debugConsoleHeader: function(d) { return "Debug Console"; },
  debugCommandsHeaderWhenOpen: function(d) { return "Debug Commands"; },
  debugCommandsHeaderWhenClosed: function(d) { return "Show Debug Commands"; },
  debugMakerToolkit: function(d) { return "Check out our general [Maker Toolkit support article](https://codeorg.zendesk.com/hc/en-us/articles/115003407851) to get help debugging common issues."; },
  debugWatchHeader: function(d) { return "Watchers"; },
  debugShowWatchHeader: function(d) { return "Show Watchers"; },
  debugWatchNotAvailable: function(d) { return "<not available>"; },
  decideLater: function(d) { return "Decide later"; },
  defaultTwitterText: function(d) { return "Check out what I made"; },
  defaultProjectNameAppLab: function(d) { return "App Lab Project"; },
  defaultProjectNameDance: function(d) { return "Dance Project"; },
  defaultProjectNameGameLab: function(d) { return "Game Lab Project"; },
  defaultProjectNameSpriteLab: function(d) { return "Sprite Lab Project"; },
  defaultProjectNameWebLab: function(d) { return "Web Lab Project"; },
  defaultProjectNameArtist: function(d) { return "Artist Project"; },
  defaultProjectNameFrozen: function(d) { return "Frozen Project"; },
  defaultProjectNameBigGame: function(d) { return "Big Game"; },
  defaultProjectNamePlayLab: function(d) { return "Play Lab Project"; },
  defaultProjectNameInfinity: function(d) { return "Infinity Project"; },
  defaultProjectNameGumball: function(d) { return "Gumball Project"; },
  defaultProjectNameIceAge: function(d) { return "Ice Age Project"; },
  defaultProjectNameMinecraft: function(d) { return "Minecraft Project"; },
  defaultProjectNameStarWars: function(d) { return "Star Wars Project"; },
  defaultProjectNameFlappy: function(d) { return "Flappy Project"; },
  defaultProjectNameBounce: function(d) { return "Bounce Project"; },
  defaultProjectNameSports: function(d) { return "Sports Project"; },
  defaultProjectNameBasketball: function(d) { return "Basketball Project"; },
  defaultProjectName: function(d) { return "My Project"; },
  "delete": function(d) { return "Delete"; },
  deleteAccount: function(d) { return "Delete Account"; },
  deleteAccount_studentWarning: function(d) { return "Deleting your account will permanently erase all personal information, coursework, and projects connected to this account."; },
  deleteAccount_teacherWarning: function(d) { return "Deleting your account will permanently erase all personal information, coursework, projects, and professional learning information connected to this account after 28 days. **It will also delete your sections and your students’ accounts** that don’t have a personal login or aren’t in another teacher’s section. Please make sure you have the authority to delete these students’ education records before deleting your own account. "; },
  deleteAccount_personalLoginInstructions: function(d) { return "Give these students a chance to keep using their Code.org accounts by [sending home instructions for creating personal logins.](" + d.explanationUrl + ") Give them at least a few days to follow these instructions BEFORE you delete your account."; },
  deleteAccountDialog_header: function(d) { return "Are you sure you want to delete your account?"; },
  deleteAccountDialog_body1: function(d) { return "**WARNING**: Deleting your account will **permanently erase** "; },
  deleteAccountDialog_body2_student: function(d) { return "all your personal information, coursework, and projects linked to this account after 28 days. "; },
  deleteAccountDialog_body2_teacher: function(d) { return "all your personal information, coursework, projects, and professional learning information linked to this account after 28 days. "; },
  deleteAccountDialog_body3: function(d) { return "It will also **permanently delete your students’ accounts** unless they created a personal login."; },
  deleteAccountDialog_button: function(d) { return "Delete my Account"; },
  deleteAccountDialog_button_studentWarning: function(d) { return "Delete my and my students' accounts"; },
  deleteAccountDialog_checkboxTitle: function(d) { return "Please verify the following " + plural(d.numCheckboxes, 0, en_us, { one: "statement", other: "statements" }) + " before you can delete your account:"; },
  deleteAccountDialog_checkbox1_1: function(d) { return "I have the authority to delete the education records "; },
  deleteAccountDialog_checkbox1_2: function(d) { return "of the students in my sections (or release it to them, if they have a personal login). "; },
  deleteAccountDialog_checkbox2_1: function(d) { return "I am aware of the "; },
  deleteAccountDialog_checkbox2_2: function(d) { return "message to send to parents "; },
  deleteAccountDialog_checkbox2_3: function(d) { return "to warn them that their children’s coding projects will be deleted unless they act to preserve it by creating a personal login for their children."; },
  deleteAccountDialog_checkbox3: function(d) { return "I understand that by deleting my account, **my students’ accounts may also be permanently deleted.**"; },
  deleteAccountDialog_checkbox4: function(d) { return "I understand that by deleting my account, **my students may not be able to access their accounts anymore.**"; },
  deleteAccountDialog_checkbox5: function(d) { return "I understand that by deleting my account, **the projects and creations of my students may also be deleted.**"; },
  deleteAccountDialog_currentPassword: function(d) { return "Current password:"; },
  deleteAccountDialog_emailUs: function(d) { return "If you delete your account and change your mind, you can email us at support@code.org within 3 weeks to recover your account."; },
  deleteAccountDialog_verification: function(d) { return "To verify, type " + d.verificationString + " below:"; },
  deleteAccountDialog_verificationString: function(d) { return "DELETE MY ACCOUNT"; },
  deleteConfirm: function(d) { return "Delete?"; },
  deleteProject: function(d) { return "Delete Project"; },
  deleteProjectConfirm: function(d) { return "Do you really want to delete your project? You cannot undo this action."; },
  deleteSection: function(d) { return "Delete Section"; },
  deleteSectionConfirm: function(d) { return "Are you sure you want to delete this section? You will not be able to undo this."; },
  deleteSectionArchiveSuggestion: function(d) { return "If you simply want to remove this section from your list of sections, consider using the 'Archive section' option instead."; },
  deleteUsedImage: function(d) { return d.name + " is used in " + plural(d.value, 0, en_us, { one: "1 place", other: number(d.value, "value") + " places" }) + " in this app. If you delete it, the image will not appear in any of those places. Are you sure you want to delete it?"; },
  deleting: function(d) { return "Deleting"; },
  description: function(d) { return "Description"; },
  designMode: function(d) { return "Design"; },
  dialogCancel: function(d) { return "Cancel"; },
  dialogConfirmEmail: function(d) { return "Confirm email"; },
  dialogOK: function(d) { return "OK"; },
  directionEastLetter: function(d) { return "E"; },
  directionNorthLetter: function(d) { return "N"; },
  directionSouthLetter: function(d) { return "S"; },
  directionWestLetter: function(d) { return "W"; },
  directionNorthwestLetter: function(d) { return "NW"; },
  directionNortheastLetter: function(d) { return "NE"; },
  directionSouthwestLetter: function(d) { return "SW"; },
  directionSoutheastLetter: function(d) { return "SE"; },
  disabledButtonsInfo: function(d) { return "Your progress and code is not being saved due to unexpectedly high Hour of Code traffic."; },
  disabledButtonsWarning: function(d) { return "Warning:"; },
  disabledButtonsWhy: function(d) { return "Why are my bubbles gray?"; },
  disabledProgress1: function(d) { return "Yikes! This week is Hour of Code and we are experiencing even more traffic than we anticipated."; },
  disabledProgress2: function(d) { return "Unfortunately, we are not able to save the progress that you make on your course while we are dealing with this issue. Don't worry, your progress from before this week is still safe."; },
  disabledProgress3: function(d) { return "We encourage you to try Hour of Code tutorials instead this week."; },
  disableMaker: function(d) { return "Disable Maker Toolkit"; },
  discountCodeSchoolConfirm: function(d) { return "Before you can receive your code, please verify the school at which you teach:"; },
  dismiss: function(d) { return "Dismiss"; },
  documentation: function(d) { return "Documentation"; },
  done: function(d) { return "Done"; },
  dontForget: function(d) { return "Don't forget"; },
  downloadCSV: function(d) { return "Download CSV"; },
  downloadAssessmentCSV: function(d) { return "Download CSV of student responses"; },
  downloadFeedbackCSV: function(d) { return "Download CSV of Feedback"; },
  downloadParentLetter: function(d) { return "Download parent letter"; },
  downloadReplayVideoButtonDownload: function(d) { return "Animation"; },
  downloadReplayVideoButtonError: function(d) { return "Sorry, we were unable to download your animation. Please try re-running your project and trying again."; },
  dragBlocksToMatch: function(d) { return "Drag the blocks to match"; },
  draw: function(d) { return "Draw"; },
  dropletBlock_addOperator_description: function(d) { return "Add two numbers"; },
  dropletBlock_addOperator_signatureOverride: function(d) { return "Add operator"; },
  dropletBlock_andOperator_description: function(d) { return "Returns true only when both expressions are true and false otherwise"; },
  dropletBlock_andOperator_signatureOverride: function(d) { return "AND boolean operator"; },
  dropletBlock_assign_x_description: function(d) { return "Assigns a value to a previously declared variable."; },
  dropletBlock_assign_x_signatureOverride: function(d) { return "Assign a variable"; },
  dropletBlock_callMyFunction_description: function(d) { return "Calls a named function that takes no parameters."; },
  dropletBlock_callMyFunction_n_description: function(d) { return "Calls a user defined function that takes one or more parameters."; },
  dropletBlock_callMyFunction_n_signatureOverride: function(d) { return "Call a function with parameters"; },
  dropletBlock_callMyFunction_signatureOverride: function(d) { return "Call a function"; },
  dropletBlock_comment_description: function(d) { return "Write a description of some code"; },
  dropletBlock_comment_signatureOverride: function(d) { return "comment"; },
  dropletBlock_declareAssign_x_array_1_4_description: function(d) { return "Declares a variable and assigns it to an array with the given initial values"; },
  dropletBlock_declareAssign_x_array_1_4_signatureOverride: function(d) { return "Declare a variable assigned to an array"; },
  dropletBlock_declareAssign_x_description: function(d) { return "Declares and assigns an initial value to a variable."; },
  dropletBlock_declareAssign_x_signatureOverride: function(d) { return "Declare a variable"; },
  dropletBlock_declareAssign_x_prompt_description: function(d) { return "Declares that the code will now use a variable and assign it an initial value provided by the user"; },
  dropletBlock_declareAssign_x_prompt_signatureOverride: function(d) { return "Prompt the user for a value and store it"; },
  dropletBlock_declareAssign_x_promptNum_description: function(d) { return "Declares that the code will now use a variable and assign it an initial numerical value provided by the user"; },
  dropletBlock_declareAssign_x_promptNum_signatureOverride: function(d) { return "Prompt the user for a numerical value and store it"; },
  dropletBlock_declareNoAssign_x_description: function(d) { return "Declares a variable with the given name."; },
  dropletBlock_declareNoAssign_x_signatureOverride: function(d) { return "Declare a variable"; },
  dropletBlock_divideOperator_description: function(d) { return "Divide two numbers"; },
  dropletBlock_divideOperator_signatureOverride: function(d) { return "Divide operator"; },
  dropletBlock_equalityOperator_description: function(d) { return "Test whether two values are equal. Returns true if the value on the left-hand side of the expression equals the value on the right-hand side of the expression, and false otherwise."; },
  dropletBlock_equalityOperator_signatureOverride: function(d) { return "Equality operator"; },
  dropletBlock_forLoop_i_0_4_description: function(d) { return "Creates a loop consisting of an initialization expression, a conditional expression, an incrementing expression, and a block of statements executed for each iteration of the loop."; },
  dropletBlock_forLoop_i_0_4_signatureOverride: function(d) { return "for loop"; },
  dropletBlock_functionParams_n_description: function(d) { return "Gives a name to a set of parameter driven actions for the computer to perform."; },
  dropletBlock_functionParams_n_signatureOverride: function(d) { return "Define a function with parameters"; },
  dropletBlock_functionParams_none_description: function(d) { return "Gives a name to a set of actions you want the computer to perform."; },
  dropletBlock_functionParams_none_signatureOverride: function(d) { return "Define a function"; },
  dropletBlock_getTime_description: function(d) { return "Get the current time in milliseconds."; },
  dropletBlock_greaterThanOperator_description: function(d) { return "Tests whether a number is greater than another number. Returns true if the value on the left-hand side of the expression is strictly greater than the value on the right-hand side of the expression."; },
  dropletBlock_greaterThanOperator_signatureOverride: function(d) { return "Greater than operator"; },
  dropletBlock_greaterThanOrEqualOperator_description: function(d) { return "Tests whether a value is greater than or equal to another value. Returns true if the value on the left-hand side of the expression is greater than or equal to the value on the right-hand side of the expression."; },
  dropletBlock_greaterThanOrEqualOperator_signatureOverride: function(d) { return "Greater than or equal operator"; },
  dropletBlock_ifBlock_description: function(d) { return "Executes a block of statements if the specified condition is true"; },
  dropletBlock_ifBlock_signatureOverride: function(d) { return "if statement"; },
  dropletBlock_ifElseBlock_description: function(d) { return "Executes a block of statements if the specified condition is true; otherwise, the block of statements in the else clause are executed"; },
  dropletBlock_ifElseBlock_signatureOverride: function(d) { return "if/else statement"; },
  dropletBlock_inequalityOperator_description: function(d) { return "Tests whether two values are not equal. Returns true if the value on the left-hand side of the expression does not equal the value on the right-hand side of the expression"; },
  dropletBlock_inequalityOperator_signatureOverride: function(d) { return "Inequality operator"; },
  dropletBlock_lessThanOperator_description: function(d) { return "Tests whether a value is less than another value. Returns true if the value on the left-hand side of the expression is strictly less than the value on the right-hand side of the expression"; },
  dropletBlock_lessThanOperator_signatureOverride: function(d) { return "Less than operator"; },
  dropletBlock_lessThanOrEqualOperator_description: function(d) { return "Tests whether a value is less than or equal to another value. Returns true if the value on the left-hand side of the expression is less than or equal to the value on the right-hand side of the expression."; },
  dropletBlock_lessThanOrEqualOperator_signatureOverride: function(d) { return "Less than or equal operator"; },
  dropletBlock_mathAbs_description: function(d) { return "Takes the absolute value of x"; },
  dropletBlock_mathAbs_param0: function(d) { return "x"; },
  dropletBlock_mathAbs_param0_description: function(d) { return "An arbitrary number."; },
  dropletBlock_mathAbs_signatureOverride: function(d) { return "Math.abs(x)"; },
  dropletBlock_mathMax_description: function(d) { return "Takes the maximum value among one or more values n1, n2, ..., nX"; },
  dropletBlock_mathMax_param0: function(d) { return "n1, n2,..., nX"; },
  dropletBlock_mathMax_param0_description: function(d) { return "One or more numbers to compare."; },
  dropletBlock_mathMax_signatureOverride: function(d) { return "Math.max(n1, n2, ..., nX)"; },
  dropletBlock_mathMin_description: function(d) { return "Takes the minimum value among one or more values n1, n2, ..., nX"; },
  dropletBlock_mathMin_param0: function(d) { return "n1, n2,..., nX"; },
  dropletBlock_mathMin_param0_description: function(d) { return "One or more numbers to compare."; },
  dropletBlock_mathMin_signatureOverride: function(d) { return "Math.min(n1, n2, ..., nX)"; },
  dropletBlock_mathPow_description: function(d) { return "Takes x to the power of y"; },
  dropletBlock_mathPow_param0: function(d) { return "x"; },
  dropletBlock_mathPow_param0_description: function(d) { return "The base number."; },
  dropletBlock_mathPow_param1: function(d) { return "y"; },
  dropletBlock_mathPow_param1_description: function(d) { return "The exponent number."; },
  dropletBlock_mathPow_signatureOverride: function(d) { return "Math.pow(x, y)"; },
  dropletBlock_mathRandom_description: function(d) { return "Returns a random number ranging from 0 (inclusive) up to but not including 1 (exclusive)"; },
  dropletBlock_mathRandom_signatureOverride: function(d) { return "Math.random()"; },
  dropletBlock_mathRound_description: function(d) { return "Rounds a number to the nearest integer"; },
  dropletBlock_mathRound_param0: function(d) { return "x"; },
  dropletBlock_mathRound_param0_description: function(d) { return "An arbitrary number."; },
  dropletBlock_mathRound_signatureOverride: function(d) { return "Math.round(x)"; },
  dropletBlock_multiplyOperator_description: function(d) { return "Multiply two numbers"; },
  dropletBlock_multiplyOperator_signatureOverride: function(d) { return "Multiply operator"; },
  dropletBlock_notOperator_description: function(d) { return "Returns false if the expression can be converted to true; otherwise, returns true"; },
  dropletBlock_notOperator_signatureOverride: function(d) { return "NOT boolean operator"; },
  dropletBlock_orOperator_description: function(d) { return "Returns true when either expression is true and false otherwise"; },
  dropletBlock_orOperator_signatureOverride: function(d) { return "OR boolean operator"; },
  dropletBlock_playSound_description: function(d) { return "Plays the MP3 sound file from the specified URL."; },
  dropletBlock_playSound_param0_description: function(d) { return "The URL to a sound file. Can be a project asset name or external URL."; },
  dropletBlock_playSound_param1_description: function(d) { return "If true, loop the sound until asked to stop."; },
  dropletBlock_playSpeech_description: function(d) { return "Plays the specified text as speech with a voice in the specified gender. Powered by Microsoft Azure."; },
  dropletBlock_randomNumber_description: function(d) { return "Returns a random number in the closed range from min to max."; },
  dropletBlock_randomNumber_param0: function(d) { return "min"; },
  dropletBlock_randomNumber_param0_description: function(d) { return "The minimum number returned"; },
  dropletBlock_randomNumber_param1: function(d) { return "max"; },
  dropletBlock_randomNumber_param1_description: function(d) { return "The maximum number returned"; },
  dropletBlock_return_description: function(d) { return "Return a value from a function"; },
  dropletBlock_return_signatureOverride: function(d) { return "return"; },
  dropletBlock_setAttribute_description: function(d) { return "Sets the given value"; },
  dropletBlock_stopSound_description: function(d) { return "Stops playing the sound file from the specified URL, or all sounds if no URL is given."; },
  dropletBlock_stopSound_param0_description: function(d) { return "The URL to a sound file. Can be an project asset name or external URL."; },
  dropletBlock_subtractOperator_description: function(d) { return "Subtract two numbers"; },
  dropletBlock_subtractOperator_signatureOverride: function(d) { return "Subtract operator"; },
  dropletBlock_whileBlock_description: function(d) { return "Creates a loop consisting of a conditional expression and a block of statements executed for each iteration of the loop. The loop continues to execute as long as the condition evaluates to true"; },
  dropletBlock_whileBlock_signatureOverride: function(d) { return "while loop"; },
  edit: function(d) { return "Edit"; },
  editAll: function(d) { return "Edit all"; },
  editProject: function(d) { return "Edit Project"; },
  editDuringRunMessage: function(d) { return "Your code may have changed. Click \"Reset\" and then \"Run\" to run your code again."; },
  editSectionDetails: function(d) { return "Edit Section Details"; },
  editSectionLoginTypeCleverDesc: function(d) { return "Students sign in through Clever."; },
  editSectionLoginTypeEmailDesc: function(d) { return "Students sign in with their personal email login information."; },
  editSectionLoginTypeGoogleDesc: function(d) { return "Students sign in through Google Classroom."; },
  editSectionLoginTypePicDesc: function(d) { return "Students sign in with a secret picture that was selected for them by Code.org."; },
  editSectionLoginTypeWordDesc: function(d) { return "Students sign in with two secret words that were selected for them by Code.org."; },
  editable: function(d) { return "Editable"; },
  eligibilityExplanation: function(d) { return "In order to be eligible to receive a code for a subsidized Circuit Playground kit, you must meet the following requirements:"; },
  eligibilityReqPD: function(d) { return "You attended a 5-day summer workshop for CS Discoveries in 2019 or are participating in the 2019-20 Facilitator Development Program as a new CS Discoveries facilitator."; },
  eligibilityReqStudentCount: function(d) { return "Ten students in one of your sections have completed the first three units of CS Discoveries."; },
  eligibilityReqStudentCountFail: function(d) { return "Sorry, it doesn't look like you have enough students in your sections that have made progress in Units 2 and 3. Please check back here once your students have finished the first semester of CS Discoveries. If you are using a different account to track the progress of students or if you think there has been an error in detecting how much progress your students have made in Units 2 and 3, please contact us at teacher@code.org."; },
  eligibilityReqYear: function(d) { return "You plan to teach Unit 6 by the end of the 2020-21 school year."; },
  eligibilityReqYearConfirmInstructions: function(d) { return "Please confirm that you will be teaching Unit 6 of CS Discoveries with your students and when you will be teaching it:"; },
  eligibilityReqYearFail: function(d) { return "The subsidy for classroom kits of the Adafruit Circuit Playground is available thanks to the generosity of Code.org's donors such as Microsoft, Facebook, Infosys Foundation, Omidyar Network, and Google. Additionally, Adafruit and DHL are helping to lower the cost of these kits directly. Our intention is that these subsidized kits are going to teachers who are teaching all units of CS Discoveries to their students (whether over 1 or 2 years), as we want to lower the barrier to teaching a hardware-based unit."; },
  eligibilityRequirements: function(d) { return "Eligibility Requirements"; },
  eligibilitySchoolUnknown: function(d) { return "Because your school isn't listed, we were not able to look up the data on what percent of your students are eligible for free/reduced-price lunches."; },
  eligibilityYearDecline: function(d) { return "Unfortunately, we can only offer codes for subsidized kits for teachers who know they will be teaching Unit 6 of CS Discoveries by the '20-'21 school year. For any questions or concerns, please contact us at teacher@code.org."; },
  eligibilityYearNo: function(d) { return "No, I am not planning on teaching Unit 6 of CS Discoveries."; },
  eligibilityYearUnknown: function(d) { return "I am not sure."; },
  eligibilityYearYesSpring2020: function(d) { return "Yes, I plan on teaching it during spring 2020."; },
  eligibilityYearYesFall2020: function(d) { return "Yes, I plan on teaching it during fall 2020."; },
  eligibilityYearYesSpring2021: function(d) { return "Yes, I plan on teaching it during spring 2021."; },
  email: function(d) { return "Email"; },
  emailConfirmationText: function(d) { return "You must confirm the email address you use to sign into this account before we can convert your account to a teacher account."; },
  emailConfirmationTitle: function(d) { return "Please confirm your email"; },
  emailAddressPolicy: function(d) { return "Code.org will not store student email addresses in a retrievable format, for privacy reasons."; },
  emailLabel: function(d) { return "Email: "; },
  embed: function(d) { return "Embed"; },
  emptyBlockInFunction: function(d) { return "The function " + d.name + " has an unfilled input."; },
  emptyBlockInVariable: function(d) { return "The variable " + d.name + " has an unfilled input."; },
  emptyBlocksErrorMsg: function(d) { return "The \"Repeat\" or \"If\" block needs to have other blocks inside it to work. Make sure the inner block fits properly inside the containing block."; },
  emptyExampleBlockErrorMsg: function(d) { return "You need at least two examples in function " + d.functionName + ". Make sure each example has a call and a result."; },
  emptyFreeResponse: function(d) { return "No response given for this question."; },
  emptyFunctionBlocksErrorMsg: function(d) { return "The function block needs to have other blocks inside it to work."; },
  emptyFunctionalBlock: function(d) { return "You have a block with an unfilled input."; },
  emptySection: function(d) { return "Your section doesn't have any students! Go to the [Manage Students](" + d.url + ") tab to add some."; },
  emptySurveyOverviewTable: function(d) { return "Because this survey is anonymous, we can only show aggregated results once there are at least 5 submissions."; },
  emptyAssessmentSubmissions: function(d) { return "There are currently no submissions for this assessment."; },
  emptyTextResponsesTable: function(d) { return "Most of our classes are designed to work for younger ages and do not require students to type text responses to questions, so you will not see any text responses here. For older students in middle and high school courses, you can see their submissions to open-ended text response questions by choosing the assigned course from the drop down above."; },
  emptyTopLevelBlock: function(d) { return "There are no blocks to run. You must attach a block to the " + d.topLevelBlockName + " block."; },
  enable: function(d) { return "Enable"; },
  enableLessonExtras: function(d) { return "Enable Lesson Extras (Only certain courses and units)"; },
  enableMaker: function(d) { return "Enable Maker Toolkit"; },
  enableMakerDialogTitle: function(d) { return "Enable Maker Toolkit?"; },
  enableMakerDialogWarning: function(d) { return "Warning: Your app will NOT work unless you have an Adafruit Circuit Playground board."; },
  enableMakerDialogDescription: function(d) { return "Maker Toolkit is a feature used in the Computer Science Discoveries curriculum. See the setup page for more details:"; },
  enableMakerDialogSetupPageLinkText: function(d) { return "Maker Toolkit Setup"; },
  enablePairProgramming: function(d) { return "Enable Pair Programming"; },
  encrypted: function(d) { return "encrypted"; },
  end: function(d) { return "end"; },
  englishOnly: function(d) { return "English-only"; },
  englishOnlyWarning: function(d) { return "Sorry! This stage is not available in your language. The puzzles in this stage use a mix of English words and characters that can’t be translated right now. You can move on to Stage " + d.nextStage + "."; },
  enterSectionCode: function(d) { return "Enter section code"; },
  enrollmentDescription: function(d) { return "Join your teacher's classroom by entering their section code below. Teachers will be able to see your course progress, projects, and reset your password in case you forget it."; },
  errorEmptyFunctionBlockModal: function(d) { return "There need to be blocks inside your function definition. Click \"edit\" and drag blocks inside the green block."; },
  errorExceededLimitedBlocks: function(d) { return "You did it! Now go find the pattern in your code and take out the extra blocks. You can only use " + d.limit + " of these blocks:"; },
  errorFindingClassLibraries: function(d) { return "Unable to load your class libraries at this time. Please check your internet connection and try again."; },
  errorIncompleteBlockInFunction: function(d) { return "Click \"edit\" to make sure you don't have any blocks missing inside your function definition."; },
  errorGenericLintError: function(d) { return "Your program contains an editor warning that needs to be corrected. Hover over the icons near the line numbers in the editor to learn more."; },
  errorLoadingRosteredSections: function(d) { return "Oops, there was a problem grabbing your sections from " + d.type + "."; },
  errorLoadingRosteredSectionsSupport: function(d) { return "If the problem persists, click here for troubleshooting tips."; },
  errorParamInputUnattached: function(d) { return "Remember to attach a block to each parameter input on the function block in your workspace."; },
  errorParsingLibrary: function(d) { return "There is an error in your imported library (" + d.libraryName + "). Try deleting and re-importing this library. " + d.errorMessage; },
  errorQuestionMarksInNumberField: function(d) { return "Try replacing \"???\" with a value."; },
  errorRequiredParamsMissing: function(d) { return "Create a parameter for your function by clicking \"edit\" and adding the necessary parameters. Drag the new parameter blocks into your function definition."; },
  errorUnusedFunction: function(d) { return "You created a function, but never used it on your workspace! Click on \"Functions\" in the toolbox and make sure you use it in your program."; },
  errorUnusedParam: function(d) { return "You added a parameter block, but didn't use it in the definition. Make sure to use your parameter by clicking \"edit\" and placing the parameter block inside the green block."; },
  errorDeleting: function(d) { return "Error deleting file."; },
  exactNumberOfBlocks: function(d) { return "Only " + plural(d.numBlocks, 0, en_us, { one: "1 block", other: number(d.numBlocks, "numBlocks") + " blocks" }) + " used!"; },
  exampleErrorMessage: function(d) { return "The function " + d.functionName + " has one or more examples that need adjusting. Make sure they match your definition and answer the question."; },
  examplesFailedOnClose: function(d) { return "One or more of your examples do not match your definition. Check your examples before closing"; },
  exampleSolution: function(d) { return "Example Solution " + d.number; },
  explainLessonExtras: function(d) { return "When Lesson Extras is on, students will end each lesson with some bonus challenges and creative projects rather than being automatically advanced to the next lesson. This feature gives students the opportunity to expand their knowledge and further practice, without getting ahead of their classmates."; },
  explainLessonExtrasLearnMore: function(d) { return "Learn more about Lesson Extras."; },
  explainPairProgramming: function(d) { return "When pair programming is turned on, students can choose to work with a classmate at the same computer. Turn this setting on if you want students to be able to work together while sharing progress."; },
  explainPairProgrammingLearnMore: function(d) { return " Learn more about pair programming."; },
  exploreDataset: function(d) { return "Visualize " + d.datasetName; },
  export: function(d) { return "Export"; },
  exportForWeb: function(d) { return "Export for web"; },
  extrasStageNChallenges: function(d) { return "Lesson " + d.stageNumber + " Challenges"; },
  extrasStageNumberCompleted: function(d) { return "You Completed Lesson " + d.number + "!"; },
  extrasTryAChallenge: function(d) { return "Try a Challenge"; },
  extrasCreateSomething: function(d) { return "Create Something"; },
  extrasNextLesson: function(d) { return "Go on to Lesson " + d.number; },
  extrasNextFinish: function(d) { return "Finish the Unit"; },
  extrasNoBonusLevels: function(d) { return "There are no bonus levels for this lesson."; },
  extraTopBlocks: function(d) { return "You have unattached blocks."; },
  extraTopBlocksWhenRun: function(d) { return "You have unattached blocks. Did you mean to attach these to the \"when run\" block?"; },
  fallbackVideoClosedCaptioningLink: function(d) { return "Closed Captioning and Translations"; },
  fallbackVideoClosedCaptioningDialogHeading: function(d) { return "Closed captioning and translations available on YouTube"; },
  fallbackVideoClosedCaptioningDialogBody: function(d) { return "Please ask your IT department to allow access to https://www.youtube-nocookie.com/*, *.googlevideo.com/*, and *.ytimg.com/* in order to get closed captioning and translations.  Note that this version of YouTube will not collect any data from you other than what is required to play the video."; },
  fallbackVideoClosedCaptioningDialogBodyLink: function(d) { return "See IT requirements"; },
  fallbackVideoClosedCaptioningDialogClose: function(d) { return "Close"; },
  featureAgain: function(d) { return "Feature again"; },
  featured: function(d) { return "Featured"; },
  featureUnpublishedWarning: function(d) { return "This project is currently unpublished. It can still be marked as featured, but it will not show in the gallery until the owner publishes it."; },
  feedback: function(d) { return "Feedback"; },
  feedbackAll: function(d) { return "All Teacher Feedback"; },
  feedbackCommentAreaHeader: function(d) { return "Teacher Feedback"; },
  feedbackDownloadFileName: function(d) { return "Feedback for " + d.sectionName + " in " + d.scriptName + " on " + d.date + ".csv"; },
  feedbackDownloadOverview: function(d) { return "This CSV file contains all feedback you’ve completed for your section " + d.sectionName + " in levels within **" + d.scriptName + "**. You can leave feedback for your students by going to a level in this unit, viewing a student's work, and clicking the \"Feedback\" tab."; },
  feedbackDownloadRecommendation: function(d) { return "We recommend checking student progress and giving feedback on levels marked as assessment opportunities."; },
  feedbackFrom: function(d) { return "Feedback from " + d.teacher; },
  feedbackLoadError: function(d) { return "There's been an error establishing a connection to our servers. Please refresh the page and try again."; },
  feedbackNoneYet: function(d) { return "You do not have any feedback on any lessons from your teacher(s) yet."; },
  feedbackNotSavedWarning: function(d) { return "Are you sure? Your feedback may not be saved."; },
  feedbackNotification: function(d) { return "Your teacher left you feedback"; },
  feedbackNotificationButton: function(d) { return "View feedback"; },
  feedbackNotificationDetails: function(d) { return "You have " + plural(d.numFeedbackLevels, 0, en_us, { one: "1 level", other: number(d.numFeedbackLevels, "numFeedbackLevels") + " levels" }) + " with unread feedback."; },
  feedbackNotificationLesson: function(d) { return d.lessonName + " " + d.lessonNum + ": Level " + d.levelNum; },
  feedbackNotificationUnit: function(d) { return d.unitName; },
  feedbackPlaceholder: function(d) { return "Please enter feedback for your student here. This will become visible to the student when you click 'Save and share'."; },
  feedbackPlaceholderNonVerified: function(d) { return "You must be a verified teacher to leave feedback."; },
  feedbackRubricEvaluation: function(d) { return "Evaluation Rubric:"; },
  feedbackSaveError: function(d) { return "There's been an error saving your feedback. Please try to save again."; },
  fewerNumberOfBlocks: function(d) { return "Fewer than " + plural(d.numBlocks, 0, en_us, { one: "1 block", other: number(d.numBlocks, "numBlocks") + " blocks" }) + " used!"; },
  filter: function(d) { return "Filter"; },
  filterByStudent: function(d) { return "Filter by student:"; },
  filterByStage: function(d) { return "Filter by stage:"; },
  finalStage: function(d) { return "Congratulations! You have completed the final puzzle."; },
  finalStageTrophies: function(d) { return "Congratulations! You have completed the final puzzle and won " + plural(d.numTrophies, 0, en_us, { one: "a trophy", other: number(d.numTrophies, "numTrophies") + " trophies" }) + "."; },
  findCourse: function(d) { return "Find a course"; },
  findCourseDescription: function(d) { return "Try new courses to add them to your homepage."; },
  findGuestSpeaker: function(d) { return "Guest Speakers"; },
  findGuestSpeakerDescription: function(d) { return "Invite a local volunteer to visit your classroom or inspire your students remotely via video chat."; },
  findLocalClassHeading: function(d) { return "Find a local computer science class"; },
  findLocalClassSubheading: function(d) { return "Local classes"; },
  findLocalClassDescription: function(d) { return "Find a local after-school program, summer camp, or school to learn in person."; },
  findLocalClassButton: function(d) { return "Find a class"; },
  finish: function(d) { return "Finish"; },
  fixZoomHelperZoomOut: function(d) { return "Zoom out"; },
  fixZoomHelperPinch: function(d) { return "Pinch in to zoom out."; },
  fixZoomHelperDismiss: function(d) { return "Or tap to dismiss."; },
  formErrorsBelow: function(d) { return "Please correct the errors below."; },
  formServerError: function(d) { return "Something went wrong on our end; please try again later."; },
  forTeachersOnly: function(d) { return "For Teachers Only"; },
  fromWhen: function(d) { return "(From " + d.when + "):"; },
  gdprDialogHeader: function(d) { return "Do you agree to using a website based in the United States?"; },
  gdprDialogDetails: function(d) { return "Data from your use of this site may be sent to and stored or processed in the United States."; },
  gdprDialogSeePrivacyPolicy: function(d) { return "For details see our privacy policy"; },
  gdprDialogLogout: function(d) { return "Log out"; },
  gdprDialogYes: function(d) { return "Yes"; },
  gender: function(d) { return "Gender"; },
  genderMale: function(d) { return "Male"; },
  genderFemale: function(d) { return "Female"; },
  genderNonBinary: function(d) { return "Non-binary"; },
  genderNotListed: function(d) { return "Preferred term not listed"; },
  generatedCodeInfo: function(d) { return "Even top universities teach block-based coding (e.g., " + d.berkeleyLink + ", " + d.harvardLink + "). But under the hood, the blocks you have assembled can also be shown in JavaScript, the world's most widely used coding language:"; },
  generatePDFReport: function(d) { return "Generate PDF report"; },
  shortGeneratedCodeInfo: function(d) { return "Even top universities teach block-based coding (e.g., " + d.berkeleyLink + ", " + d.harvardLink + "). The blocks you use can also be shown in JavaScript, the most widely used coding language:"; },
  getDiscountCode: function(d) { return "Get discount code"; },
  getCode: function(d) { return "Get Code"; },
  getCodePrice: function(d) { return "Get Code for " + d.price + " kit"; },
  getHelp: function(d) { return "Get Help"; },
  goBack: function(d) { return "Go Back"; },
  gotIt: function(d) { return "Got it!"; },
  goToAssignedVersion: function(d) { return "Go to assigned version"; },
  goToCodeStudio: function(d) { return "Go to Code Studio"; },
  goToUnit: function(d) { return "Go to Unit"; },
  grade: function(d) { return "Grade"; },
  hashError: function(d) { return "Sorry, '%1' doesn't correspond with any saved program."; },
  help: function(d) { return "Help"; },
  helpTips: function(d) { return "Help & Tips"; },
  hidden: function(d) { return "Hidden"; },
  hiddenScriptTooltip: function(d) { return "Please select a section before trying to toggle whether or not the unit is visible to your students."; },
  hiddenUnitWarningNotice: function(d) { return "The unit is hidden for this section"; },
  hiddenUnitWarningDetails: function(d) { return "Go to the course overview page to update which units are visible to your students by clicking \"View all units.\""; },
  hide: function(d) { return "Hide"; },
  hideArchivedSections: function(d) { return "Hide archived sections"; },
  hideFullList: function(d) { return "Hide full list"; },
  hideGeneratedCode: function(d) { return "Hide Code"; },
  hideHiddenSections: function(d) { return "Hide hidden sections"; },
  hidePicture: function(d) { return "Hide picture"; },
  hideProjectSharingColumn: function(d) { return "Hide project sharing column"; },
  hideSection: function(d) { return "Hide Section"; },
  hideWords: function(d) { return "Hide words"; },
  hideToolbarHelper: function(d) { return "Press **_A_A** and choose **Hide Toolbar** to see the full screen."; },
  hideToolbox: function(d) { return "(Hide)"; },
  hintHeader: function(d) { return "Here's a tip:"; },
  hintPrompt: function(d) { return "Need help?"; },
  hintPromptInline: function(d) { return "Do you want a hint?"; },
  hintRequest: function(d) { return "See hint"; },
  hintReviewTitle: function(d) { return "Review Your Hints"; },
  hintSelectInstructions: function(d) { return "Instructions and old hints"; },
  hintSelectNewHint: function(d) { return "Get a new hint"; },
  hintTitle: function(d) { return "Hint"; },
  histogram: function(d) { return "Histogram"; },
  homepageHeading: function(d) { return "My Dashboard"; },
  howItWorks: function(d) { return "How it Works (View Code)"; },
  iconSearchPlaceholder: function(d) { return "Search for an icon..."; },
  iDontKnow: function(d) { return "I don't know"; },
  ifCode: function(d) { return "if"; },
  ignore: function(d) { return "Ignore"; },
  import: function(d) { return "Import"; },
  importFromGoogleClassroom: function(d) { return "Import section from Google Classroom"; },
  importFromClever: function(d) { return "Import section from Clever"; },
  inDevelopment: function(d) { return "In Development"; },
  incorrectAnswer: function(d) { return "Incorrect answer"; },
  incorrectAnswerBody: function(d) { return "The answer you've entered is not correct.  Please try again!"; },
  incorrectSolution: function(d) { return "Incorrect solution"; },
  incorrectSolutionBody: function(d) { return "The solution you've entered is not correct.  Please try again!"; },
  infinity: function(d) { return "Infinity"; },
  inProgress: function(d) { return "In progress"; },
  inspireStudents: function(d) { return "Inspire students"; },
  instructions: function(d) { return "Instructions"; },
  intlAnnouncementSpecial2020Body: function(d) { return "Students can continue to learn at home while schools are closed. Take a Code Break with us, or see resources for students, parents, and teachers - including videos, fun tutorials, and projects! Most options only available in English."; },
  intlAnnouncementSpecial2020Heading: function(d) { return "More resources for learning at home"; },
  invalidDataEntryTypeError: function(d) { return "Value must be boolean, number, string, `undefined`, or `null`. Make sure to include quotes for strings like \"this\". "; },
  invalidRecordTypeError: function(d) { return "You attempted to add a record to the table that included a list or object. The data table can only store booleans, numbers, strings, null, and undefined."; },
  joinASection: function(d) { return "Join a section"; },
  joinInstructions: function(d) { return "Joining Instructions"; },
  joinSection: function(d) { return "Join section"; },
  joinSectionExplanation: function(d) { return "Ask your students to join your section by going to this link and entering the section code (above): "; },
  joinSectionAsk: function(d) { return "Tell your students to create their own accounts and join your section at: "; },
  joinSectionDescription: function(d) { return "Join a teacher's section by entering their Section Code."; },
  joinSectionPlaceholder: function(d) { return "Section Code (ABCDEF)"; },
  joinCommunity: function(d) { return "Join community"; },
  joinText: function(d) { return "join"; },
  joinTextTooltip: function(d) { return "Create a piece of text by joining together multiple items."; },
  joinUs: function(d) { return "Join us"; },
  jump: function(d) { return "jump"; },
  jumpToLesson: function(d) { return "Jump to lesson"; },
  justDidHourOfCode: function(d) { return "I just did the #HourOfCode - check it out! @codeorg"; },
  justDidHourOfCodeDonor: function(d) { return "I just did the #HourOfCode - check it out! (Thanks " + d.donor_twitter + " for supporting @codeorg)"; },
  keepPlaying: function(d) { return "Keep playing"; },
  keyWithColon: function(d) { return "Key: "; },
  keyConcept: function(d) { return "Key Concept"; },
  keyValueCaption: function(d) { return "Use key/value pairs to store a list of unique keys that map to values."; },
  keyValuePairsHeader: function(d) { return "KEY/VALUE PAIRS"; },
  keyValuePairLink: function(d) { return "Key/value pairs"; },
  languages: function(d) { return "Languages"; },
  lastEdited: function(d) { return "Last Edited"; },
  lastProgress: function(d) { return "Last Progress:"; },
  lastPublished: function(d) { return "Last Published"; },
  lastUpdated: function(d) { return "Last updated " + d.time; },
  lastUpdatedNoTime: function(d) { return "Last Updated:"; },
  learnMore: function(d) { return "Learn more"; },
  leaveSection: function(d) { return "Leave section"; },
  less: function(d) { return "Less"; },
  lessAllCaps: function(d) { return "LESS"; },
  lesson: function(d) { return "Lesson"; },
  lessons: function(d) { return "Lessons"; },
  lessonExtras: function(d) { return "Lesson Extras are turned off for the selected section"; },
  lessonExtrasButton: function(d) { return "Go to Teacher Dashboard"; },
  lessonExtrasDetails: function(d) { return "Your students won’t see this page unless you turn them on. You can turn Lesson Extras on by editing section details from your Teacher Dashboard."; },
  lessonName: function(d) { return "Lesson Name"; },
  lessonNumber: function(d) { return "Lesson Number"; },
  lessonNumbered: function(d) { return "Lesson " + d.lessonNumber + ": " + d.lessonName; },
  lessonPlans: function(d) { return "Lesson Plans"; },
  lessonsAttempted: function(d) { return "Lessons attempted in"; },
  lessonsAvailableWithColon: function(d) { return "Lessons available: "; },
  lessonsCompleted: function(d) { return "Lessons completed"; },
  lessonsCompletedWithColon: function(d) { return "Lessons completed: "; },
  lessonStatus: function(d) { return "Lesson Status"; },
  level: function(d) { return "Level,"; },
  levels: function(d) { return "Levels"; },
  levelDetails: function(d) { return "Level Details"; },
  levelHeader: function(d) { return "Level"; },
  levelIncompleteError: function(d) { return "Keep coding! Something's not quite right yet."; },
  levelN: function(d) { return "LEVEL " + d.levelNumber; },
  levelNotStartedWarning: function(d) { return "This student has not started the level."; },
  levelsAttempted: function(d) { return "Levels attempted in"; },
  levelStatus: function(d) { return "Level Status"; },
  levelType: function(d) { return "Level Type"; },
  library: function(d) { return "Library"; },
  libraryClassImport: function(d) { return "Import library from my class"; },
  libraryCodeError: function(d) { return "We can't publish your library because there is an error in the code. Go look for the square red error indicator and fix the errors."; },
  libraryCodeProfanity: function(d) { return "It appears that your project contains inappropriate language. Please update your project to remove the " + plural(d.profanityCount, 0, en_us, { one: "word", other: "words" }) + " \"" + d.profaneWords + "\"."; },
  libraryCreatorError: function(d) { return "There was an error creating your library. Contact support@code.org to resolve the issue."; },
  libraryDetailsProfanity: function(d) { return "It appears your library name or description contains inappropriate language. Please update your name or description to remove the " + plural(d.profanityCount, 0, en_us, { one: "word", other: "words" }) + " \"" + d.profaneWords + "\"."; },
  libraryDescriptionPlaceholder: function(d) { return "Write a description of your library"; },
  libraryExportDuplicationFunctionError: function(d) { return "This function cannot be exported because there are multiple functions with this name."; },
  libraryExportId: function(d) { return "Your library/project ID is **" + d.channelId + "**"; },
  libraryExportNoCommentError: function(d) { return "This function cannot be exported until you add a comment to it."; },
  libraryExportSubtitle: function(d) { return "Share functions in your project with others in your class or anyone with the project's ID. Others can import your functions into their projects by going to \"Manage Libraries\" in the gear icon at the top of the toolbox."; },
  libraryExportTitle: function(d) { return "Export Functions as a Library"; },
  libraryFunctionRequirements: function(d) { return "Select the functions you want to add to the library. To help understand what the function is for, you may only export functions that have a comment directly above them in your code."; },
  libraryIdImport: function(d) { return "Import library from ID"; },
  libraryImportError: function(d) { return "An error occurred while importing your library. Please make sure you have a valid ID and an internet connection."; },
  libraryLoadError: function(d) { return "There was an error loading your library. Check your internet connection and try again."; },
  libraryManage: function(d) { return "Manage libraries in this project"; },
  libraryName: function(d) { return "Library Name"; },
  libraryNameRequirements: function(d) { return "Your library's name must start with a capital letter and use only letters, numbers, and underscores."; },
  libraryNoFunctionsError: function(d) { return "We can't publish your library because it doesn't have any functions. Try writing a function to include in your library."; },
  libraryNotShared: function(d) { return "This library isn't assigned to any class sections."; },
  libraryPublishExplanation: function(d) { return "Share this ID with others so they can use your library in their project:"; },
  libraryPublishInvalid: function(d) { return "Your library must include a description and at least one function."; },
  libraryPublishFail: function(d) { return "There was an error publishing your library. Please check your internet connection and try again."; },
  libraryPublishTitle: function(d) { return "Successfully published your library: "; },
  librarySharedSections: function(d) { return "This library is assigned to the following sections:"; },
  libraryUnPublishExplanation: function(d) { return "No one will be able to import or update your library. However, people who have already imported your library will be able to keep using it. You can re-publish your library at any time."; },
  libraryUnPublishFail: function(d) { return "There was an error unpublishing your library. Please check your internet connection and try again."; },
  libraryUnPublishTitle: function(d) { return "Successfully unpublished your library"; },
  linesOfCode: function(d) { return "Lines of Code"; },
  listVariable: function(d) { return "list"; },
  loading: function(d) { return "Loading..."; },
  loadingError: function(d) { return "An error occurred. Please reload the page and try again."; },
  locked: function(d) { return "Locked"; },
  lockFollowing: function(d) { return "Lock the following stages that are currently unlocked:"; },
  lockAssessment: function(d) { return "Lock assessment"; },
  lockAssessmentLong: function(d) { return "Lock assessment when students finish using the \"Lock Settings\" button."; },
  lockSettings: function(d) { return "Lock Settings"; },
  lockStage: function(d) { return "Lock stage"; },
  lockStageInstructions: function(d) { return "Once time is up, \"Lock stage\" to hide questions."; },
  lockWhenDone: function(d) { return "Lock when students finish"; },
  loggedIn: function(d) { return "Logged in: " + d.partner; },
  loginCardForPrint1: function(d) { return "1.) Go to [" + d.directLink + "](" + d.directLink + ") or to [" + d.joinLink + "](" + d.joinLink + ") and type in your 6-letter section code: **" + d.sectionCode + "**"; },
  loginCardForPrint2: function(d) { return "2.) Choose your name: **" + d.studentName + "**"; },
  loginCardForPrint3Picture: function(d) { return "3.) Choose your secret picture:"; },
  loginCardForPrint3Word: function(d) { return "3.) Type in your secret words: **" + d.secretWords + "**"; },
  loginCardForPrint4: function(d) { return "4.) Click the sign in button."; },
  loginCardSectionName: function(d) { return "Section name: **" + d.sectionName + "**"; },
  loginCard_directUrl: function(d) { return "Direct URL:"; },
  loginCard_name: function(d) { return "Name:"; },
  loginCard_instructions: function(d) { return "Visit " + d.url + " and enter " + d.code; },
  loginCard_secretPicture: function(d) { return "Secret Picture:"; },
  loginCard_secretWords: function(d) { return "Secret Words:"; },
  loginCard_sectionName: function(d) { return "Section Name:"; },
  loginExportLink: function(d) { return "Download CSV"; },
  loginExportFilename: function(d) { return "logins"; },
  loginExportHeader_sectionCode: function(d) { return "Section Code"; },
  loginExportHeader_sectionName: function(d) { return "Section Name"; },
  loginExportHeader_sectionLoginType: function(d) { return "Section Login Type"; },
  loginExportHeader_studentName: function(d) { return "Student Name"; },
  loginExportHeader_studentLoginSecret: function(d) { return "Student Login Secret"; },
  loginExportInstructions: function(d) { return "**Teaching remotely?** Download a CSV of student login information so you can do a mail merge or easily copy and paste each student's username and password into emails."; },
  loginInfo: function(d) { return "Login Info"; },
  loginInfo_joinTitle: function(d) { return "Joining Your Section (one-time only)"; },
  loginInfo_joinBody: function(d) { return "If a student has not yet joined your section, please ask them to perform the following steps. Note that they only need to do this once. By joining your section, students will be able see the course assigned to them and you will be able to track the progress of the work they complete while they are signed in."; },
  loginInfo_joinStep1: function(d) { return "Create a Code.org account if they haven’t already done so. They can do this at " + d.url + ". Note that they can either sign up with an email address and password, or sign up through Google, Facebook, or Microsoft by clicking on one of these buttons:"; },
  loginInfo_joinStep2: function(d) { return "Sign in to their Code.org account."; },
  loginInfo_joinStep3: function(d) { return "Navigate to " + d.url + " and type in their section code: " + d.code + "."; },
  loginInfo_joinStep4: function(d) { return "Once they press the \"Go\" button, they should be added to your section."; },
  loginInfo_noStudents: function(d) { return "*It looks like you don't have any students in this section! Add some students in the [Manage Students](" + d.url + ") tab for this section.*"; },
  loginInfo_oauthSectionCodes: function(d) { return d.provider + " sections do not have 6-digit section codes, so your student will not need to use a section code to login."; },
  loginInfo_resetTitle: function(d) { return "Resetting Student Passwords"; },
  loginInfo_resetPasswordBody: function(d) { return "If your student created a Code.org account using their email address and password (rather than signing in through Google, Facebook, Microsoft, or Clever), you can reset their password by going to the [Manage Students](" + d.url + ") tab of your section and clicking the \"Reset password\" button in the \"Password\" column."; },
  loginInfoResetSecretPicDesc: function(d) { return "You can reset the picture password for any of your students by going to the [Manage Students](" + d.url + ") tab for the section, clicking the \"Show picture\" button under the \" Picture password\" column, and clicking the \"Reset\" button."; },
  loginInfoResetSecretWordDesc: function(d) { return "You can reset the secret words for any of your students by going to the [Manage Students](" + d.url + ") tab for the section, clicking the \"Show words\" button under the \"Secret words\" column, and clicking the \"Reset\" button."; },
  loginInfo_signingIn: function(d) { return "Signing In"; },
  loginInfo_signingInDescription: function(d) { return "Your students can sign in to their Code.org accounts by going to https://code.org and clicking the \"Sign in\" button in the top right corner."; },
  loginInfo_signingInClever: function(d) { return "Your students should sign in to their Code.org accounts by going to their Clever dashboard and clicking the Code.org logo."; },
  loginInfo_signingInGoogle: function(d) { return "From there, they should choose the \"Continue with Google\" option:"; },
  loginInfo_signinSteps: function(d) { return "Your students can sign in to their Code.org accounts by following these steps:"; },
  loginInfoWordPicMoreBelow: function(d) { return "Students can find all of this information, including their secret " + d.wordOrPicture + ", in the login cards below."; },
  loginInfo_signinStep1: function(d) { return "Go to " + d.joinUrl + "."; },
  loginInfo_signinStep2: function(d) { return "Type in their section code: " + d.code + "."; },
  loginInfo_signinStep3: function(d) { return "Choose their display name."; },
  loginInfo_signinStep4_secretPicture: function(d) { return "Choose their secret picture."; },
  loginInfo_signinStep4_secretWords: function(d) { return "Type in their secret words."; },
  loginInfo_signinStep5: function(d) { return "Click the \"Sign in\" button."; },
  loginType: function(d) { return "Login Type"; },
  loginTypeClever: function(d) { return "Clever"; },
  loginTypeCleverButton: function(d) { return "Use Clever"; },
  loginTypeCleverDescription: function(d) { return "Sync your Code.org section with an existing Clever section. Students must log in with their Clever account."; },
  loginTypeEmail: function(d) { return "Email logins"; },
  loginTypeEmailAgeGroup: function(d) { return "Recommended for ages 13+"; },
  loginTypeEmailButton: function(d) { return "Use email logins"; },
  loginTypeEmailDescription: function(d) { return "Each student will create their own Code.org account using their email address (kept 100% private*)."; },
  loginTypeGoogleClassroom: function(d) { return "Google Classroom"; },
  loginTypeGoogleClassroomButton: function(d) { return "Use Google Classroom"; },
  loginTypeGoogleClassroomDescription: function(d) { return "Sync your Code.org section with an existing Google Classroom. Students must log in with their Google account."; },
  loginTypeMicrosoftClassroom: function(d) { return "Microsoft Classroom"; },
  loginTypeMicrosoftClassroomButton: function(d) { return "Use Microsoft Classroom"; },
  loginTypeMicrosoftClassroomDescription: function(d) { return "Sync your Code.org section with an existing Microsoft Classroom."; },
  loginTypeOauthLongDescription: function(d) { return "This section is a \"" + d.provider + "\" section type, meaning it is synced with your " + d.provider + " roster. If you want to add or remove students from this section, you must first make sure they are added to or removed from your section in " + d.provider + ", and then click the \"Sync students from " + d.provider + "\" button at the top of this page."; },
  loginTypePersonal: function(d) { return "Personal logins"; },
  loginTypePicture: function(d) { return "Picture logins"; },
  loginTypePictureAgeGroup: function(d) { return "Recommended for ages 4 - 8"; },
  loginTypePictureDescription: function(d) { return "You will create accounts for your students. Students will log in with a secret picture."; },
  loginTypeSyncButton: function(d) { return "Sync students from " + d.providerName; },
  loginTypeSyncButton_failure: function(d) { return "An error occurred. Click here to try again."; },
  loginTypeSyncButton_inProgress: function(d) { return "Connecting to " + d.providerName + "..."; },
  loginTypeSyncButton_success: function(d) { return "Sync complete!"; },
  loginTypeWord: function(d) { return "Word logins"; },
  loginTypeWordAgeGroup: function(d) { return "Recommended for ages 9 - 12"; },
  loginTypeWordButton: function(d) { return "Use word logins"; },
  loginTypeWordDescription: function(d) { return "You will create accounts for your students. Students will log in with a secret pair of words."; },
  makeMyOwn: function(d) { return "Make my own"; },
  makeNewSounds: function(d) { return "Make new sounds"; },
  makerNewProjectButton: function(d) { return "Create a project"; },
  makerNewProjectDesc: function(d) { return "Create a new App Lab app with Maker Toolkit enabled"; },
  makerNewProjectTitle: function(d) { return "Create a new app"; },
  makerPageTitle: function(d) { return "Code.org Maker App"; },
  makerSetupButton: function(d) { return "Go to setup page"; },
  makerSetupDesc: function(d) { return "Having issues connecting to the Circuit Playground? Visit the setup page to better debug your issue."; },
  makerSetupTitle: function(d) { return "Visit the setup page"; },
  makerViewProjectsButton: function(d) { return "Go to projects"; },
  makerViewProjectsDesc: function(d) { return "Go to your project list to view all of your existing projects and continue working on them."; },
  makerViewProjectsTitle: function(d) { return "View your project list"; },
  makeYourOwnFlappy: function(d) { return "Make Your Own Flappy Game"; },
  manageAssets: function(d) { return "Manage Assets"; },
  manageLibraries: function(d) { return "Manage Libraries"; },
  manageLinkedAccounts: function(d) { return "Manage Linked Accounts"; },
  manageLinkedAccounts_actions: function(d) { return "Actions"; },
  manageLinkedAccounts_noLoginTooltip: function(d) { return "To make sure you can still sign in to your account, please add a password or another linked account first."; },
  manageLinkedAccounts_clever: function(d) { return "Clever Account"; },
  manageLinkedAccounts_connect: function(d) { return "Connect"; },
  manageLinkedAccounts_disconnect: function(d) { return "Disconnect"; },
  manageLinkedAccounts_emailAddress: function(d) { return "Email Address"; },
  manageLinkedAccounts_facebook: function(d) { return "Facebook Account"; },
  manageLinkedAccounts_google_oauth2: function(d) { return "Google Account"; },
  manageLinkedAccounts_loginType: function(d) { return "Login Type"; },
  manageLinkedAccounts_microsoft: function(d) { return "Microsoft Account"; },
  manageLinkedAccounts_notConnected: function(d) { return "Not Connected"; },
  manageLinkedAccounts_rosteredSectionTooltip: function(d) { return "You cannot disconnect from this linked account because it is tied to one of your sections."; },
  manageStudents: function(d) { return "Manage Students"; },
  manageStudentsNotificationFailure: function(d) { return "Something went wrong."; },
  manageStudentsNotificationCannotAdd: function(d) { return "You could not add " + plural(d.numStudents, 0, en_us, { one: "1 student", other: number(d.numStudents, "numStudents") + " students" }) + " to your section. Please try again or refresh the page."; },
  manageStudentsNotificationAddSuccess: function(d) { return "You added " + plural(d.numStudents, 0, en_us, { one: "1 student", other: number(d.numStudents, "numStudents") + " students" }) + " to your section."; },
  manageStudentsNotificationSuccess: function(d) { return "Success!"; },
  manageYourLibraries: function(d) { return "Manage Your Libraries"; },
  map: function(d) { return "Map"; },
  mapsToCSTAStandards: function(d) { return "Maps to [CSTA Standards](" + d.cstaLink + ")"; },
  matchQuestionsOverview: function(d) { return "Match questions overview (" + d.numSubmissions + " / " + d.numStudents + " students)"; },
  matchStudentOverview: function(d) { return "Match questions overview (" + d.studentName + ")"; },
  middleCenter: function(d) { return "middle center"; },
  middleLeft: function(d) { return "middle left"; },
  middleRight: function(d) { return "middle right"; },
  migrateToMutiAuth_buttonText: function(d) { return "Try New Version"; },
  migrateToMultiAuth_details: function(d) { return "We are busy redesigning our Accounts page to be faster and easier to use. You can preview the new layout today!"; },
  migrateToMultiAuth_notice: function(d) { return "Coming Soon: Updated Accounts Page"; },
  minecraft2017Button: function(d) { return "Go to Minecraft Education"; },
  minecraft2017Desc: function(d) { return "Take your code to Minecraft: Education Edition! Copy or write down your share link."; },
  minecraft2017Title: function(d) { return "Keep Coding in Minecraft"; },
  minecraftAquaticButton: function(d) { return "Go to Minecraft Education"; },
  minecraftAquaticDesc: function(d) { return "You can learn and practice coding in Minecraft with Code Builder."; },
  minecraftAquaticTitle: function(d) { return "Minecraft Education"; },
  minecraftAquaticPromoButton: function(d) { return "Start"; },
  minecraftAquaticPromoDesc: function(d) { return "Minecraft is back for the Hour of Code with a brand new activity! Use your creativity and problem solving skills to explore and build underwater worlds with code."; },
  minecraftAquaticPromoTitle: function(d) { return "Minecraft: Voyage Aquatic"; },
  missingRecommendedBlocksErrorMsg: function(d) { return "Not quite. Try using a block you aren’t using yet."; },
  missingRequiredBlocksErrorMsg: function(d) { return "Not quite. You have to use a block you aren’t using yet."; },
  missionStatement: function(d) { return "**Code.org®** is a nonprofit dedicated to expanding access to computer science in schools and increasing participation by women and underrepresented minorities. Our vision is that every student in every school has the opportunity to learn computer science, just like biology, chemistry or algebra. Code.org provides the leading curriculum for K-12 computer science in the largest school districts in the United States and Code.org also organizes the annual Hour of Code campaign which has engaged 15% of all students in the world. Code.org is supported by generous donors including Amazon, Facebook, Google, the Infosys Foundation, Microsoft, and many more."; },
  more: function(d) { return "More"; },
  moreAllCaps: function(d) { return "MORE"; },
  moreInfo: function(d) { return "More info."; },
  moveStudents: function(d) { return "Move students"; },
  moveStudentsConfirm: function(d) { return "No, I want to move student(s) to be in the new section only."; },
  movingStudents: function(d) { return "Moving students..."; },
  moveToSection: function(d) { return "Move to section"; },
  multipleChoiceQuestionsOverview: function(d) { return "Multiple choice questions overview (" + d.numSubmissions + " / " + d.numStudents + " students)"; },
  multipleChoiceStudentOverview: function(d) { return "Multiple choice questions overview (" + d.studentName + ")"; },
  myCourses: function(d) { return "My Courses"; },
  myLibraries: function(d) { return "My Libraries"; },
  myProjects: function(d) { return "My Projects"; },
  name: function(d) { return "Name"; },
  nameRequired: function(d) { return "Student name (required)"; },
  nameFailureDialogTitle: function(d) { return "Unable to rename project"; },
  nameFailureDialogBody: function(d) { return "It appears that your project name contains inappropriate language or personally identifiable information like your address, email, or phone number. Please pick a new name that doesn't contain \"" + d.text + ".\""; },
  nestedForSameVariable: function(d) { return "You're using the same variable inside two or more nested loops. Use unique variable names to avoid infinite loops."; },
  newAnimation: function(d) { return "new animation"; },
  newCostume: function(d) { return "new costume"; },
  newPassword: function(d) { return "new password"; },
  newSection: function(d) { return "New section"; },
  newSectionEllipsis: function(d) { return "New section..."; },
  newSectionAdd: function(d) { return "Add a new classroom section"; },
  newSectionCreate: function(d) { return "Create a new section"; },
  next: function(d) { return "Next"; },
  nextLevel: function(d) { return "Congratulations! You completed Puzzle " + d.puzzleNumber + "."; },
  nextLevelTrophies: function(d) { return "Congratulations! You completed Puzzle " + d.puzzleNumber + " and won " + plural(d.numTrophies, 0, en_us, { one: "a trophy", other: number(d.numTrophies, "numTrophies") + " trophies" }) + "."; },
  nextPuzzle: function(d) { return "Next puzzle"; },
  nextStage: function(d) { return "Congratulations! You completed " + d.stageName + "."; },
  nextStageTrophies: function(d) { return "Congratulations! You completed " + d.stageName + " and won " + plural(d.numTrophies, 0, en_us, { one: "a trophy", other: number(d.numTrophies, "numTrophies") + " trophies" }) + "."; },
  no: function(d) { return "No"; },
  noAssessments: function(d) { return "It looks like there are no multi-question assessments or surveys in this course. Instead, you can measure the students’ progress using the 'Progress' tab. If you are interested in giving your students additional assessments, you can find recommended questions and areas in the lesson plans."; },
  noClassroomsFound: function(d) { return "No classrooms found."; },
  noColumnsInTable: function(d) { return "We couldn't find any columns in \"" + d.table + "\". Make sure this table is imported in your project."; },
  noIconsFound: function(d) { return "No icons found"; },
  noLibraries: function(d) { return "You currently have no libraries."; },
  noLibrariesInProject: function(d) { return "You have no libraries in your project. Try adding one from your class list or from an ID."; },
  noLibrariesInClass: function(d) { return "No one in your class has published a library. Try adding one from an ID."; },
  noMenuItemsAvailable: function(d) { return "No menu items available."; },
  nominateATeacher: function(d) { return "Nominate a Teacher"; },
  noStudentsInSection: function(d) { return "There are no other students in this section."; },
  noPersonalProjects: function(d) { return "You currently have no projects. Click on one of the buttons above to start a project."; },
  noTablesInProject: function(d) { return "You have no tables in your project. Try adding one from the Data Library."; },
  none: function(d) { return "None"; },
  note: function(d) { return "*Note:"; },
  notInRightPlace: function(d) { return "It looks like you're not in the right place"; },
  notAnswered: function(d) { return "Not Answered"; },
  notApplicable: function(d) { return "N/A"; },
  notCompleted: function(d) { return "Not completed"; },
  notSaved: function(d) { return "Not saved"; },
  notStarted: function(d) { return "Not started"; },
  nPoints: function(d) { return plural(d.numPoints, 0, en_us, { one: "1 point", other: number(d.numPoints, "numPoints") + " points" }); },
  numMatchCorrect: function(d) { return "# match correct"; },
  numMatch: function(d) { return "# match"; },
  numMultipleChoiceCorrect: function(d) { return "# multiple choice correct"; },
  numMultipleChoice: function(d) { return "# multiple choice"; },
  numBlocksNeeded: function(d) { return "Congratulations! You completed Puzzle " + d.puzzleNumber + ". (However, you could have used only " + plural(d.numBlocks, 0, en_us, { one: "1 block", other: number(d.numBlocks, "numBlocks") + " blocks" }) + ".)"; },
  numBlocksUsedLabel: function(d) { return "Blocks"; },
  numLanguages: function(d) { return d.numLanguages + " Languages"; },
  numLinesOfCodeWritten: function(d) { return "You just wrote " + plural(d.numLines, 0, en_us, { one: "1 line", other: number(d.numLines, "numLines") + " lines" }) + " of code!"; },
  ok: function(d) { return "OK"; },
  okay: function(d) { return "Okay"; },
  online: function(d) { return "Online"; },
  openWorkspace: function(d) { return "How It Works"; },
  or: function(d) { return "or"; },
  option: function(d) { return "Option"; },
  optional: function(d) { return "(optional)"; },
  orientationLock: function(d) { return "Turn off orientation lock in device settings."; },
  onetimeHintPromptMessage: function(d) { return "Click the lightbulb for a hint"; },
  onetimeHintPromptTitle: function(d) { return "Feeling Stuck?"; },
  other: function(d) { return "Other"; },
  otherTeacher: function(d) { return "Other teacher"; },
  paginationLabel: function(d) { return "Page:"; },
  pairingNavigatorWarning: function(d) { return "This puzzle was completed while pairing with " + d.driver + "."; },
  pairingNavigatorLink: function(d) { return "Click here to view the solution you created as a team."; },
  pairProgramming: function(d) { return "Pair Programming"; },
  pairProgrammingChosePartners: function(d) { return "Choose partners:"; },
  pairProgrammingStop: function(d) { return "Stop Pair Programming"; },
  pairProgrammingWith: function(d) { return "You are Pair Programming with:"; },
  parent: function(d) { return "Parent"; },
  parents: function(d) { return "Parents"; },
  parentsAndStudents: function(d) { return "Parents and Students"; },
  parentLetterClever1: function(d) { return "Have your students log in to their Clever account at [www.clever.com](" + d.cleverLink + ") (click \"Sign in as a student\" at the top right)"; },
  parentLetterClever2: function(d) { return "Click on the Code.org logo on the Clever dashboard. The logo looks like this:"; },
  parentLetterClosing: function(d) { return "Please let me know if you have any questions and thank you for your continued support of your child and of our classroom!"; },
  parentLetterForgotPassword: function(d) { return "If your student does not remember their password, please email me and I will provide it"; },
  parentLetterForgotPasswordEmail: function(d) { return "If your student does not remember their password, they can reset it from the sign in screen"; },
  parentLetterForgotPicturePassword: function(d) { return "If your student does not remember their picture password, please email me and I will provide it"; },
  parentLetterGoogle1: function(d) { return "Choose 'Sign in with Google'"; },
  parentLetterGoogle2: function(d) { return "Sign in via the Google sign-in dialog"; },
  parentLetterHello: function(d) { return "Hello!"; },
  parentLetterIntro: function(d) { return "In my class, " + d.studentName + " is learning computer science on [Code.org](" + d.homeLink + "), a fun, creative platform for learning computer science and basic coding to create interactive animations, games, or apps. Your interest in what your child is learning is critical, and Code.org makes it easy to stay involved."; },
  parentLetterLoginType: function(d) { return "Our class uses **" + d.loginTypeName + "** to sign in. To have your student sign in to Code.org at home, do the following:"; },
  parentLetterPicturePassword: function(d) { return "Click on their picture password and then click 'Sign in'"; },
  parentLetterSectionSignIn: function(d) { return "Go to [" + d.sectionLink + "](" + d.sectionLink + ") and click on their name"; },
  parentLetterSecretWords: function(d) { return "Type in their secret words " + d.secretWords + " and then click 'Sign in'"; },
  parentLetterSignIn: function(d) { return "Go to [" + d.studioLink + "](" + d.studioLink + ") and click 'Sign In'"; },
  parentLetterSignInEmail: function(d) { return "Have them enter their email and password and then click 'Sign In'"; },
  parentLetterStep1: function(d) { return "Step 1 - Encourage your child, show interest in computer science"; },
  parentLetterStep1Details: function(d) { return "One of the best ways is to ask your child to explain what they’re learning and show you a project they are proud of, [see details](" + d.engagementLink + "). Or watch one of these [videos](" + d.videosLink + ") together."; },
  parentLetterStep2: function(d) { return "Step 2 - Get your child set up to use Code.org at home"; },
  parentLetterStep2Details: function(d) { return "At the top of their homepage, " + d.studentName + " can continue the course they are doing with their classroom at school. They can also create their own [games or artwork in the Project Gallery](" + d.projectsLink + ") or check out [code.org/athome](" + d.atHomeLink + ") for ideas for things to work on at home."; },
  parentLetterStep3: function(d) { return "Step 3 - Connect your email to your student's account"; },
  parentLetterStep3Details: function(d) { return "Keep up to date with what your student is working on and receive updates from Code.org. Have your child sign in to Code.org and then enter your email in Account Settings or [click here](" + d.accountEditLink + ")."; },
  parentLetterStudentPrivacy: function(d) { return "Code.org's commitment to student privacy"; },
  parentLetterStudentPrivacyDetails: function(d) { return "Code.org assigns utmost importance to student safety and security. Code.org has signed the [Student Privacy Pledge](" + d.pledgeLink + ") and their privacy practices have received [one of the highest overall scores from Common Sense Media](" + d.commonSenseLink + "). You can find further details by viewing Code.org's [Privacy Policy](" + d.privacyPolicyLink + ")."; },
  parentLetterWhy: function(d) { return "Why computer science"; },
  parentLetterWhyDetails: function(d) { return "[Six different studies show](" + d.researchLink + "): children who study computer science perform better in other subjects, excel at problem solving, and are 17% more likely to attend college. Computer science teaches students critical thinking, problem solving, and digital citizenship, and benefits all students, no matter what opportunities they pursue in the future. And learning to make interactive animations, code-art, games, and apps on Code.org encourages creativity and makes learning fun."; },
  partner: function(d) { return "Partner: " + d.partner; },
  password: function(d) { return "Password"; },
  passwordConfirmation: function(d) { return "Password confirmation"; },
  passwordTooShort: function(d) { return "Password too short (minimum is 6 characters)"; },
  passwordsMustMatch: function(d) { return "Passwords must match"; },
  pause: function(d) { return "Break"; },
  percentCorrect: function(d) { return "% correct"; },
  perfect: function(d) { return "perfect"; },
  perfectDescription: function(d) { return "PERFECT!"; },
  performanceLevel: function(d) { return "Performance Level"; },
  performanceLevelDetails: function(d) { return "Performance Level Details"; },
  personalLoginDialog_body1: function(d) { return "Deleting your account will also delete the following " + plural(d.numStudents, 0, en_us, { one: "student's account", other: number(d.numStudents, "numStudents") + " students' accounts" }) + " "; },
  personalLoginDialog_body2: function(d) { return "unless they create a personal login for their " + plural(d.numStudents, 0, en_us, { one: "account", other: "accounts" }) + " first:"; },
  personalLoginDialog_body3: function(d) { return "Please give your students a chance to keep using their Code.org accounts by "; },
  personalLoginDialog_body4: function(d) { return "sending these instructions home with them "; },
  personalLoginDialog_body5: function(d) { return "on how they can create a personal login. Give them at least a few days to follow these instructions BEFORE you delete your account."; },
  personalLoginDialog_body6: function(d) { return "If you have already done this, click “Next” to continue with account deletion."; },
  personalLoginDialog_button: function(d) { return "Next"; },
  play: function(d) { return "play"; },
  playzoneArtistDescription: function(d) { return "Draw cool pictures and designs with the Artist!"; },
  playzoneArtistTitle: function(d) { return "New Drawing"; },
  playzoneContinueButton: function(d) { return "Go on to the next Stage"; },
  playzonePlaylabDescription: function(d) { return "Create a story or make a game with Play Lab!"; },
  playzonePlaylabTitle: function(d) { return "New App"; },
  playzonePrimaryHeader: function(d) { return "Congratulations! You finished " + d.stageName + "!"; },
  playzoneProjectsDescription: function(d) { return "Revisit one of your existing projects."; },
  playzoneProjectsTitle: function(d) { return "Open a Project"; },
  playzoneSecondaryHeader: function(d) { return "Ask your teacher what to do next"; },
  plLandingDescription: function(d) { return "Thank you for completing a " + d.course + " workshop. Please complete this survey about your experience to help us improve future professional development workshops!"; },
  plLandingHeading: function(d) { return "My Professional Learning"; },
  plLandingSubheading: function(d) { return "Submit your feedback"; },
  plLandingStartSurvey: function(d) { return "Start survey"; },
  plugged: function(d) { return "Plugged"; },
  pluggedLessonsNote: function(d) { return "*Online or ‘plugged’ lessons are automatically marked as complete on your behalf once 80% of your class has completed 60% of the available lesson."; },
  picturePassword: function(d) { return "Picture password"; },
  policyViolation: function(d) { return "This project contains information that cannot be shared with others. Please contact the app owner to fix the contents of their app."; },
  positionAbsoluteDown: function(d) { return "down"; },
  positionAbsoluteOver: function(d) { return "over"; },
  positionAbsoluteUp: function(d) { return "up"; },
  pre2017MinecraftButton: function(d) { return "Go to Minecraft Education"; },
  pre2017MinecraftDesc: function(d) { return "Continue learning with Minecraft."; },
  pre2017MinecraftTitle: function(d) { return "Minecraft Education"; },
  predictionInstructions: function(d) { return "Make a prediction before you run the program."; },
  preview: function(d) { return "Preview"; },
  printCertificate: function(d) { return "Print Certificate"; },
  printCertificates: function(d) { return "Print Certificates"; },
  printLoginCard: function(d) { return "Print login card"; },
  printLoginCards: function(d) { return "Print Login Cards"; },
  printLoginCardExplanation: function(d) { return "Print out cards with your students' login information."; },
  printLoginCards_button: function(d) { return "Print login cards"; },
  printLoginCards_title: function(d) { return "Login Cards"; },
  printLoginCards_windowTitle: function(d) { return "Login Cards for " + d.sectionName; },
  printReport: function(d) { return "Print report"; },
  printReportWindowTitle: function(d) { return "Standards Report for " + d.sectionName; },
  privacyDocExplanation: function(d) { return "We encourage you to share this letter with parents to introduce them to Code.org, share student sign-in information, and allow them to review our policies on student privacy."; },
  privacyHeading: function(d) { return "Parent Letter and Student Privacy"; },
  privacyLinkToPolicy: function(d) { return "Just looking for a letter about Code.org's privacy policy for families? [Check here](" + d.privacyPolicyLink + ")."; },
  professionalLearning: function(d) { return "Professional Learning"; },
  professionalLearningDescription: function(d) { return "Our highly-rated professional learning prepares you for your next computer science class."; },
  progress: function(d) { return "Progress"; },
  progressLegendAssessment: function(d) { return "Assessment"; },
  progressOnCSTAStandards: function(d) { return "Progress on CSTA Standards"; },
  progressOnCSTAStandardsDescription: function(d) { return "This view shows you how the lessons your class has completed map to the **[Computer Science Teachers Association's (CSTA) standards](" + d.cstaLink + ")**."; },
  projectsContinueWorking: function(d) { return "Continue working on a recent project"; },
  projectDescriptionApplab: function(d) { return "Start with App Lab:  an introductory programming environment where you can design an app, code with blocks or JavaScript to make it work, then share your app in seconds."; },
  projectDescriptionGamelab: function(d) { return "Ready to go further? Game Lab is a more complex programming environment where you can make animations and games with characters that run, jump, fly and more."; },
  projectDescriptionWeblab: function(d) { return "Web Lab is a programming environment where you can make simple web pages using HTML and CSS. Design your web pages and share your site in seconds."; },
  projectGalleryCardAction: function(d) { return "See the gallery"; },
  projectGalleryCardDescription: function(d) { return "Share your own creations or find inspiration from creations made by students all around the world."; },
  projectGroupAdvancedTools: function(d) { return "Beyond Blocks"; },
  projectGroupArtist: function(d) { return "Drawing"; },
  projectGroupArtistAllProjects: function(d) { return "All Drawing Projects"; },
  projectGroupArtistViewMore: function(d) { return "View more drawing projects"; },
  projectGroupEvents: function(d) { return "Games with Events"; },
  projectGroupEventsAllProjects: function(d) { return "All Games with Events"; },
  projectGroupEventsViewMore: function(d) { return "View more games with events"; },
  projectGroupMath: function(d) { return "Math"; },
  projectGroupMinecraft: function(d) { return "Minecraft"; },
  projectGroupMinecraftAllProjects: function(d) { return "All Minecraft Projects"; },
  projectGroupMinecraftViewMore: function(d) { return "View more Minecraft projects"; },
  projectGroupPreReader: function(d) { return "Pre-reader"; },
  projectGroupPreReaderAllProjects: function(d) { return "All Pre-reader Projects"; },
  projectGroupPreReaderViewMore: function(d) { return "View more pre-reader projects"; },
  projectGroupPlaylab: function(d) { return "Stories and Games with Play Lab"; },
  projectGroupPlaylabAllProjects: function(d) { return "All Play Lab Projects"; },
  projectGroupPlaylabViewMore: function(d) { return "View more Play Lab projects"; },
  projectLastUpdated: function(d) { return "Last updated"; },
  projectName: function(d) { return "Project Name"; },
  projectSaveError: function(d) { return "Error saving project"; },
  projectSaveErrorTooltip: function(d) { return "It looks like we couldn't save your progress. Make sure you have a good internet connection and try running the project again to save it."; },
  projectShareLinkImportBadLinkHeader: function(d) { return "Share link not recognized"; },
  projectShareLinkImportBadLinkBody: function(d) { return "We couldn't import that share link. Make sure you are using a link from a Minecraft: Agent puzzle, and that you have copied the full link."; },
  projectShareLinkImportErrorHeader: function(d) { return "Something went wrong."; },
  projectShareLinkImportErrorBody: function(d) { return "There was a problem importing that share link. Please try again."; },
  projectSharingColumnHeader: function(d) { return "Sharing"; },
  projectSharingDialogButton: function(d) { return "Show project sharing column"; },
  projectSharingDialogHeader: function(d) { return "Control sharing for App Lab / Game Lab / Web Lab projects"; },
  projectSharingDialogInstructions: function(d) { return "App Lab, Game Lab and Web Lab are programming environments that allow students to personalize and customize their creations through writing free-form text, uploading images and sounds, etc. By default, students under the age of 13 are not able to share their projects with others, but students aged 13 and over are.\n\n If you want to be able to manage exactly which students can and can not share these project types, you can show the project sharing column by clicking the orange button below."; },
  projectSharingDisableAll: function(d) { return "Disable all"; },
  projectSharingEnableAll: function(d) { return "Enable all"; },
  projectStartNew: function(d) { return "Start a new project"; },
  projectType: function(d) { return "Type"; },
  projectTypeAllProjectsApplab: function(d) { return "All App Lab Projects"; },
  projectTypeAllProjectsArtist: function(d) { return "All Artist Projects"; },
  projectTypeAllProjectsGamelab: function(d) { return "All Game Lab Projects"; },
  projectTypeAllProjectsGamelabBeta: function(d) { return "All Game Lab (beta) Projects"; },
  projectTypeAlgebra: function(d) { return "Algebra"; },
  projectTypeApplab: function(d) { return "App Lab"; },
  projectTypeArtist: function(d) { return "Artist"; },
  projectTypeArtistPreReader: function(d) { return "Artist (Pre-reader)"; },
  projectTypeBasketball: function(d) { return "Basketball"; },
  projectTypeBounce: function(d) { return "Bounce"; },
  projectTypeCalc: function(d) { return "Calc"; },
  projectTypeDance: function(d) { return "Dance Party"; },
  projectTypeDrawing: function(d) { return "Drawing"; },
  projectTypeEval: function(d) { return "Eval"; },
  projectTypeEvents: function(d) { return "Events"; },
  projectTypeFlappy: function(d) { return "Flappy"; },
  projectTypeFrozen: function(d) { return "Frozen"; },
  projectTypeGamelab: function(d) { return "Game Lab"; },
  projectTypeGamelabBeta: function(d) { return "Game Lab (beta)"; },
  projectTypeGumball: function(d) { return "The Amazing World of Gumball"; },
  projectTypeIceage: function(d) { return "Ice Age"; },
  projectTypeInfinity: function(d) { return "Infinity"; },
  projectTypeK1: function(d) { return "Pre-reader"; },
  projectTypeMinecraft: function(d) { return "Minecraft"; },
  projectTypeMinecraftAdventurer: function(d) { return "Minecraft Adventurer"; },
  projectTypeMinecraftAquatic: function(d) { return "Minecraft Aquatic"; },
  projectTypeMinecraftDesigner: function(d) { return "Minecraft Designer"; },
  projectTypeMinecraftHero: function(d) { return "Minecraft Hero"; },
  projectTypePlaylab: function(d) { return "Play Lab"; },
  projectTypePlaylabPreReader: function(d) { return "Play Lab (Pre-reader)"; },
  projectTypeStarwars: function(d) { return "Star Wars"; },
  projectTypeStarwarsBlocks: function(d) { return "Star Wars (Blocks)"; },
  projectTypeSpriteLab: function(d) { return "Sprite Lab"; },
  projectTypeSports: function(d) { return "Sports"; },
  projectTypeWeblab: function(d) { return "Web Lab"; },
  projectTypeApplabViewMore: function(d) { return "View more App Lab projects"; },
  projectTypeGamelabViewMore: function(d) { return "View more Game Lab projects"; },
  projectTypeSpriteLabViewMore: function(d) { return "View more Sprite Lab projects"; },
  projectTypeDanceViewMore: function(d) { return "View more Dance Party projects"; },
  projectsViewAll: function(d) { return "View all projects"; },
  projectsViewProjectGallery: function(d) { return "View projects"; },
  projects: function(d) { return "Projects"; },
  projectsSubHeading: function(d) { return d.project_count + " projects created"; },
  print: function(d) { return "Print"; },
  privacyPolicy: function(d) { return "Privacy Policy"; },
  projectWarning: function(d) { return "Note: You are on a level that is part of a longer project. Changes made on this level will also appear in other levels in the project."; },
  provideAge: function(d) { return "Provide your age below and click OK to continue."; },
  provideAgeReportAbuse: function(d) { return "Please specify an age"; },
  provideEmail: function(d) { return "Please provide an email address"; },
  providerManagedSection: function(d) { return "This section is managed by " + d.provider + ". Add students there, then re-sync this section."; },
  publish: function(d) { return "Publish"; },
  publishPending: function(d) { return "Publishing..."; },
  publishToClassGallery: function(d) { return "Publish to Class Gallery"; },
  publishToPublicGallery: function(d) { return "Publish to Public Gallery"; },
  publishToPublicGalleryWarning: function(d) { return "You are about to publish your project to the public gallery, meaning anyone in the world can view your project. Make sure your project does not contain any inappropriate content or personal information."; },
  published: function(d) { return "Published"; },
  publicGallery: function(d) { return "Public Gallery"; },
  publicProjects: function(d) { return "Public Projects"; },
  puzzle: function(d) { return "Puzzle"; },
  puzzleCompleted: function(d) { return "Puzzle completed!"; },
  puzzleRatingQuestion: function(d) { return "Did you like this puzzle?"; },
  puzzleTitle: function(d) { return "Puzzle " + d.puzzle_number + " of " + d.stage_total; },
  question: function(d) { return "Question"; },
  questionDetails: function(d) { return "Question details"; },
  questionText: function(d) { return "Question text"; },
  quickActions: function(d) { return "Quick actions"; },
  random: function(d) { return "random"; },
  rateButtonsLabel: function(d) { return "Rate:"; },
  readonlyWorkspaceHeader: function(d) { return "View only"; },
  recommended: function(d) { return "Recommended"; },
  recommendedBlockContextualHintTitle: function(d) { return "Try using a block like this to solve the puzzle."; },
  record: function(d) { return "Record"; },
  recording: function(d) { return "Recording"; },
  recordAudio: function(d) { return "Record Audio"; },
  redirectConfirmation: function(d) { return "Do you want to open this website?"; },
  redirectCourseVersionWarningDetails: function(d) { return "It looks like you accidentally went to a different version of the course. You've been redirected to the recommended version or the version assigned by your teacher."; },
  redirectExplanation: function(d) { return "This is a link to an external website not operated or reviewed by Code.org and it does not follow the Code.org privacy policy. Please report this app if it is linking to content that is inappropriate or unsafe: "; },
  redirectRejectExplanation: function(d) { return "This app is trying to open a website that appears to be unsafe."; },
  redirectRejectTitle: function(d) { return "Navigation to Unsafe Site Detected"; },
  redirectTitle: function(d) { return "You are leaving this app"; },
  redirectUnsupportedTitle: function(d) { return "Navigation Type Unsupported"; },
  redirectUnsupportedExplanation: function(d) { return "Mailto: links are not supported in App Lab. Please try using a different URL"; },
  reloadPage: function(d) { return "Reload Page"; },
  relockStage: function(d) { return "Re-lock stage"; },
  relockStageInstructions: function(d) { return "\"Re-lock stage\" to prevent sharing of answers with other classes/schools."; },
  remix: function(d) { return "Remix"; },
  removeFromClassGallery: function(d) { return "Remove from Class Gallery"; },
  removeFromPublicGallery: function(d) { return "Remove from Public Gallery"; },
  removeFromProject: function(d) { return "Remove from project"; },
  removeStudent: function(d) { return "Remove student"; },
  removeStudentAndRecordsHeader: function(d) { return "Remove " + d.studentName + " and release the education records to the student?"; },
  removeStudentBody1: function(d) { return "**Make sure you have authority from the school to release this student’s education records to them** before removing them from your section. If the student is not in a teacher’s section, they will be in full control of their data and have the ability to delete their account, including their course progress and projects."; },
  removeStudentBody2: function(d) { return "This student will no longer be able to sign in to their account once you remove them. Please give your student a chance to keep using their Code.org account by allowing them to create a personal login. Give them at least a few days to follow these instructions before you remove them."; },
  removeStudentConfirm1: function(d) { return "If your student currently logs in through a secret picture or secret pair of words, the student may no longer be able to log into their account if you remove them from your section. If this is the case, please give your student a chance to keep using their Code.org account by letting them create a personal login."; },
  removeStudentConfirm2: function(d) { return "Send home these instructions on how to create a personal login."; },
  removeStudentConfirm3: function(d) { return "Give them at least a few days to follow these instructions before you remove them."; },
  removeStudentSendHomeInstructions: function(d) { return "Send home instructions for creating a personal login"; },
  removeStudentHeader: function(d) { return "Are you sure you want to remove this student?"; },
  removeUnusedStudentHeader: function(d) { return "Are you sure you want to remove " + d.studentName + "?"; },
  rename: function(d) { return "Rename"; },
  repeat: function(d) { return "repeat"; },
  replayButton: function(d) { return "Replay"; },
  reportAbuse: function(d) { return "Report Abuse"; },
  reportAbuseIntro: function(d) { return "If you have encountered offensive content, threats, cyberbullying, harassment, or an instance of copyright infringement for content you own while using apps built on Code Studio, please fill out the form below. We will take your report very seriously, investigate accordingly, and take appropriate action."; },
  reset: function(d) { return "Reset"; },
  resetProgram: function(d) { return "Reset"; },
  resetPassword: function(d) { return "Reset password"; },
  resetTeacherPasswordTooltip: function(d) { return "You cannot reset passwords for teacher accounts in your section."; },
  resources: function(d) { return "Resources"; },
  response: function(d) { return "Response"; },
  restoreSection: function(d) { return "Restore Section"; },
  restoreThisVersion: function(d) { return "Restore this Version"; },
  retryProjectSaveDialogHeader: function(d) { return "Error saving your project"; },
  retryProjectSaveDialogBody: function(d) { return "We can't save your project right now. Please check your internet connection and then click 'Try again' to keep working."; },
  retryProjectSaveDialogButton: function(d) { return "Try again"; },
  retryProjectSavePending: function(d) { return "saving..."; },
  review: function(d) { return "Review"; },
  reviewCode: function(d) { return "Review Code"; },
  reviewDocuments: function(d) { return "Review documents"; },
  reviewResponses: function(d) { return "Go to the assessment/survey tab for your section to review student responses."; },
  rotateText: function(d) { return "Rotate your device."; },
  rubricHeader: function(d) { return "Evaluation Rubric"; },
  rubricLevelThreeHeader: function(d) { return "Limited Evidence"; },
  rubricLevelOneHeader: function(d) { return "Extensive Evidence"; },
  rubricKeyConceptHeader: function(d) { return "Key Concept"; },
  rubricLevelTwoHeader: function(d) { return "Convincing Evidence"; },
  rubricLevelFourHeader: function(d) { return "No Evidence"; },
  runNatively: function(d) { return "Run natively (Beta)"; },
  runProgram: function(d) { return "Run"; },
  runTooltip: function(d) { return "Run the program defined by the blocks in the workspace."; },
  runtimeErrorMsg: function(d) { return "Your program did not run successfully. Please remove line " + d.lineNumber + " and try again."; },
  save: function(d) { return "Save"; },
  saveAll: function(d) { return "Save all"; },
  saveAndPublish: function(d) { return "Save & Publish"; },
  saveAndShare: function(d) { return "Save and share"; },
  savedToGallery: function(d) { return "Saved"; },
  saving: function(d) { return "Saving..."; },
  scanQRCode: function(d) { return "Scan this code with your phone camera:"; },
  scatterPlot: function(d) { return "Scatter Plot"; },
  searchForCountry: function(d) { return "Search for your country."; },
  searchForSchool: function(d) { return "Enter your school name, city, or zip code to search"; },
  searchForSchoolPrompt: function(d) { return "e.g. \"Lincoln Elementary\" or \"Lincoln Elementary Lynwood\" or \"Lynwood\""; },
  seeFullResponse: function(d) { return " ...see full response"; },
  seeFullQuestion: function(d) { return " ...see full question"; },
  school: function(d) { return "School"; },
  schoolCity: function(d) { return "School City"; },
  schoolCityTown: function(d) { return "City / Town"; },
  schoolCountry: function(d) { return "School Country"; },
  schoolInfoDialogDescription: function(d) { return "Welcome back!  Are you still teaching at "; },
  schoolInfoDialogDescriptionSchoolName: function(d) { return d.schoolName + "?"; },
  schoolInfoDialogUpdate: function(d) { return "No, update my info"; },
  schoolInfoInterstitialDescription: function(d) { return "Please enter your school information below."; },
  schoolInfoInterstitialTitle: function(d) { return "We want to bring Computer Science to every student - help us track our progress!"; },
  schoolInfoInterstitialUnknownError: function(d) { return "We encountered an error with your submission. Please try again."; },
  schoolInfoRequired: function(d) { return "School information is required."; },
  schoolInformationHeader: function(d) { return "School / Organization Information"; },
  schoolLocationSearchPlaceholder: function(d) { return "Search for your city / town location"; },
  schoolName: function(d) { return "School Name"; },
  schoolState: function(d) { return "School State"; },
  schoolType: function(d) { return "School Type"; },
  schoolTypeCharter: function(d) { return "Charter"; },
  schoolTypePrivate: function(d) { return "Private"; },
  schoolTypePublic: function(d) { return "Public"; },
  schoolTypeHomeschool: function(d) { return "Homeschool"; },
  schoolTypeAfter: function(d) { return "After School"; },
  schoolTypeOrganization: function(d) { return "Organization"; },
  schoolTypeOther: function(d) { return "Other"; },
  schoolZip: function(d) { return "School Postal Code"; },
  schoolNotFound: function(d) { return "Other school not listed below (click here to provide details)"; },
  schoolNotFoundCheckboxLabel: function(d) { return "I cannot find my school above"; },
  schoolNotFoundDescription: function(d) { return "Sorry, we couldn't find your school. Please enter information below."; },
  score: function(d) { return "score"; },
  secretWords: function(d) { return "Secret words"; },
  section: function(d) { return "Section"; },
  sectionWithColon: function(d) { return "Section:"; },
  sectionCode: function(d) { return "Section Code"; },
  sectionCodeWithColon: function(d) { return "Section Code:"; },
  sectionCodePlaceholder: function(d) { return "6-character code (ABCDEF)"; },
  sectionName: function(d) { return "Section Name"; },
  sectionSignInInfo: function(d) { return "Alternatively, share this section's sign in page with your students: "; },
  sectionsJoined: function(d) { return "Classroom Sections I've Joined"; },
  sectionsTitle: function(d) { return "Classroom Sections"; },
  sectionsNotificationFailure: function(d) { return "Couldn't join section"; },
  sectionsNotificationJoinExists: function(d) { return "You have already joined section " + d.sectionName + "."; },
  sectionsNotificationJoinFail: function(d) { return "An error occurred attempting to join section " + d.sectionId + "."; },
  sectionsNotificationJoinNotFound: function(d) { return "Section " + d.sectionId + " doesn't exist."; },
  sectionsNotificationJoinSuccess: function(d) { return "You joined section " + d.sectionName + "."; },
  sectionsNotificationLeaveSuccess: function(d) { return "You left section " + d.sectionName + ". If you left by mistake, you can join again with section code " + d.sectionId + "."; },
  sectionsNotificationSuccess: function(d) { return "Success!"; },
  sectionViewProgress: function(d) { return "View Progress"; },
  secret: function(d) { return "Secret"; },
  seeAllTutorials: function(d) { return "See all tutorials"; },
  seePrivacyPolicy: function(d) { return "(See our privacy policy)"; },
  select: function(d) { return "Select"; },
  selectACourse: function(d) { return "Select a course or unit"; },
  selectAllFunctions: function(d) { return "Select all functions"; },
  selectAnOption: function(d) { return "Please select an option..."; },
  selectAssessment: function(d) { return "Select an assessment or survey"; },
  selectAssignedLibrarySections: function(d) { return "Select one or more sections to assign this library to"; },
  selectCityFirst: function(d) { return "Please select a city first."; },
  selectCleverSection: function(d) { return "Select a Clever section"; },
  selectCountryFirst: function(d) { return "Please select a country first."; },
  selectDepartmentFirst: function(d) { return "Please select a department first."; },
  selectGoogleClassroom: function(d) { return "Select a Google Classroom"; },
  selectLibraryForOptions: function(d) { return "Select a library for more options"; },
  selectMunicipalityFirst: function(d) { return "Please select a municipality first."; },
  selectSection: function(d) { return "Select Section"; },
  selectSectionInstructions: function(d) { return "Select a section to be able to lock and unlock assessments or surveys. Click the lock settings button in the stage to the left."; },
  selectSectionLabel: function(d) { return "Select section:"; },
  selectSectionOption: function(d) { return "Select a section"; },
  selectSong: function(d) { return "Select song:"; },
  selectStudent: function(d) { return "Filter by student"; },
  selectStudentsToMove: function(d) { return "Select students to move to a new section in the table. Select which section you want to move your students to in the dropdown below. Choose \"Other teacher\" if you want to move students to a different teacher's section. Moving students will not clear their progress."; },
  sendToPhone: function(d) { return "Send to phone"; },
  settings: function(d) { return "Settings"; },
  setUpClass: function(d) { return "Set up your class"; },
  setUpClassCleverIntro: function(d) { return "To get your class set up with Clever, do the following:"; },
  setUpClassClever1: function(d) { return "1. Make sure your class is set up the way you want it to be in Clever."; },
  setUpClassClever2: function(d) { return "2. Hit the 'sync classroom' button above to copy your Clever students to Code.org."; },
  setUpClassCleverFinished: function(d) { return "You're finished! If you need to add or remove students later, do that in Clever first, and then sync your classroom again with Code.org."; },
  setUpClassGoogleIntro: function(d) { return "To get your class set up with Google Classroom, do the following:"; },
  setUpClassGoogle1: function(d) { return "1. Make sure your class is set up the way you it to be in Google Classroom."; },
  setUpClassGoogle2: function(d) { return "2. Hit the 'sync classroom' button above to copy your Google Classroom students to Code.org."; },
  setUpClassGoogleFinished: function(d) { return "You're finished! If you need to add or remove students later, do that in Google Classroom first, and then sync your classroom again with Code.org."; },
  setUpClassPicIntro: function(d) { return "To get your class set up with picture password accounts, do the following:"; },
  setUpClassWordIntro: function(d) { return "To get your class set up with secret words accounts, do the following:"; },
  setUpClassWordPic1: function(d) { return "1. Add each of your students in the table above."; },
  setUpClassWord2: function(d) { return "2. [Print login cards](" + d.printLoginCardLink + ") that show each student's name and 'secret words'. Share these with your students."; },
  setUpClassPic2: function(d) { return "2. [Print login cards](" + d.printLoginCardLink + ") that show each student's name and picture password. Share these with your students."; },
  setUpClassEmailIntro: function(d) { return "To get your class set up with personal logins, do the following:"; },
  setUpClassEmail1: function(d) { return "1. Have your students [create Code.org accounts](" + d.createAccountLink + ") with their own email addresses. If they already have a Code.org account associated with their email address, they can skip this step."; },
  setUpClassEmail2: function(d) { return "2. Have your students visit this link to join your section: [" + d.joinLink + "](" + d.joinLink + ")"; },
  setUpClass3: function(d) { return "3. [Share our privacy letter](" + d.parentLetterLink + ") with parents to introduce them to Code.org and allow them to review our policies on student privacy."; },
  setUpClass4: function(d) { return "4. Have your students follow the instructions below to sign in."; },
  setUpClassroom: function(d) { return "Set up your classroom"; },
  setupCoursesTeacher: function(d) { return "Assign a course to your classroom or start your own course."; },
  setupCoursesStudent: function(d) { return "Browse Code.org's courses to find your next challenge."; },
  share: function(d) { return "Share"; },
  shareCopyLink: function(d) { return "Copy the link:"; },
  shareEmbedDescription: function(d) { return "You can paste the embed code into an HTML page to display the project on a webpage."; },
  shareLibraryButton: function(d) { return "Assign library"; },
  shareLibrary: function(d) { return "Share as library"; },
  shareLibraryAccess: function(d) { return "Sharing an ID directly gives permanent access to your library"; },
  shareLibraryWithClassmate: function(d) { return "Share the functions in your project with a friend or classmate."; },
  shareFailure: function(d) { return "Sorry, we can't share this program."; },
  shareSettingEnableButton: function(d) { return "Enable sharing advanced projects for all students"; },
  shareSettingDisableButton: function(d) { return "Disable sharing advanced projects for all students"; },
  shareSettingEnableButtonDescription: function(d) { return "Sharing projects created through Code.org's advanced programming tools (App Lab, Game Lab, and Web Lab) is currently disabled for all of your students. If you would like to re-enable sharing, please click on the 'Enable sharing advanced projects for all students' button below."; },
  shareSettingDisableButtonDescription: function(d) { return "If you need to block your students from sharing projects created through Code.org's advanced tools (App Lab, Game Lab, and Web Lab) that allow students to write free-form text, upload their own images and sounds, etc., you can do so by clicking on the 'Disable sharing advanced projects for all students' button below."; },
  shareSettingSupportArticle: function(d) { return "Learn more."; },
  shareSettingEnableTitle: function(d) { return "Are you sure you want to enable sharing?"; },
  shareSettingDisableTitle: function(d) { return "Are you sure you want to disable sharing?"; },
  shareSettingEnableAction: function(d) { return "Enable sharing"; },
  shareSettingDisableAction: function(d) { return "Disable sharing"; },
  shareSettingEnableDialog: function(d) { return "By enabling sharing, your students will be allowed to share their projects created through Code.org’s advanced programming tools (App Lab, Game Lab, and Web Lab) with anyone by sharing their project link."; },
  shareSettingDisableDialog: function(d) { return "An important part of the student experience of using Code.org is the ability to share their projects and creations with others. With sharing disabled, students will not be able to share their creations created with our advanced programming tools (App Lab, Game Lab, and Web Lab) with anyone else besides their Code.org teachers. These advanced tools are designed for students that are over 13 or being used under a teacher or parent’s guidance."; },
  shareSettingDisableDialogNote: function(d) { return "Note that students will still be able to share projects created using the programming tools designed for younger students like Play Lab and Artist. These tools limit what students can create and do not allow for uploading any of their own assets. To protect students’ privacy, shared creations in the project gallery are labeled only with the first letter of a student’s name and an age range."; },
  shareSettingMoreDetailsTooltip: function(d) { return "App Lab / Game Lab / Web Lab sharing enabled?"; },
  shareTeacherLibraryDescription: function(d) { return "Assign and unassign your published libraries to your sections or copy the ID and share your library with others to use in their projects."; },
  shareTitle: function(d) { return "Share your project"; },
  shareU13Warning: function(d) { return "Ask your teacher before sharing. Only share with others in your school."; },
  shareWarningsAge: function(d) { return "Please provide your age below and click OK to continue."; },
  shareWarningsMoreInfo: function(d) { return "Code.org Privacy Policy"; },
  shareWarningsStoreDataBeforeHighlight: function(d) { return "This app built on Code Studio stores data that can be viewed by anyone with access to this project, so "; },
  shareWarningsStoreDataHighlight: function(d) { return "avoid providing personal information about yourself or others"; },
  shareWarningsStoreDataAfterHighlight: function(d) { return "."; },
  sharingAgePrompt: function(d) { return "Please select an age."; },
  sharingBlockedByTeacher: function(d) { return "Sorry, you do not have permissions to share this project. If you want to be able to share your project, please ask your teacher to enable sharing of App Lab / Game Lab / Web Lab projects for your section from the 'Manage students' tab in their dashboard. They can do this by adding the project sharing column from the Actions settings menu."; },
  sharingDisabled: function(d) { return "Sorry, this project is not available for sharing. If this is your project or the project of one of your students, please [sign in](" + d.sign_in_url + ") to your account to view the project."; },
  show: function(d) { return "Show"; },
  showAnswers: function(d) { return "Show answers"; },
  showAnswersInstructions: function(d) { return "\"Show answers\" to put the assessment into a read-only mode."; },
  showBlock: function(d) { return "Get a block"; },
  showBlocksHeader: function(d) { return "Show Blocks"; },
  showCodeHeader: function(d) { return "Show Code"; },
  showGeneratedCode: function(d) { return "Show code"; },
  showPicture: function(d) { return "Show picture"; },
  showSection: function(d) { return "Show Section"; },
  showTextHeader: function(d) { return "Show Text"; },
  showToolbox: function(d) { return "Show Toolbox"; },
  showVersionsHeader: function(d) { return "Version History"; },
  showWords: function(d) { return "Show words"; },
  showingLibrariesFromSection: function(d) { return "Showing libraries from section: "; },
  signup: function(d) { return "Sign up for the intro course"; },
  signUpButton: function(d) { return "Sign up"; },
  signupFormSchoolOrOrganization: function(d) { return "School / Organization"; },
  signupFormSchoolType: function(d) { return "Type"; },
  signinCodeOrg: function(d) { return "Sign in to Code.org"; },
  signinForProgress: function(d) { return "Already have a Code.org account? Sign in so we can save your progress."; },
  signinOrAge: function(d) { return "Sign in or provide your age to continue"; },
  signinDanceParty: function(d) { return "Provide your age to continue"; },
  signingInClever: function(d) { return "Signing in with Clever"; },
  signingInCleverIntro: function(d) { return "Students must log in with their Clever account. Have your students do the following:"; },
  signingInClever1: function(d) { return "1. Have your students log in to their Clever account:"; },
  signingInClever1a: function(d) { return "a. Go to [www.clever.com](https://www.clever.com)."; },
  signingInClever1b: function(d) { return "b. Click on 'Sign in as a student' at the top right."; },
  signingInClever2: function(d) { return "2. Click on the Code.org logo on the Clever dashboard. The logo looks like this:"; },
  signingInGoogle: function(d) { return "Signing in with Google Classroom"; },
  signingInGoogleIntro: function(d) { return "Students must sign in with their Google Classroom account. Have your students do the following:"; },
  signingInGoogle2: function(d) { return "2. Choose 'Sign in with Google'."; },
  signingInGoogle3: function(d) { return "3. Sign in via the Google sign-in dialog."; },
  signingInEmail: function(d) { return "Signing in with Personal Logins"; },
  signingInEmailIntro: function(d) { return "Have your students do the following to sign in with their personal logins:"; },
  signingInEmailGoogle1: function(d) { return "1. Go to [www.code.org](" + d.codeOrgLink + ") and click the 'sign in' button."; },
  signingInEmail2: function(d) { return "2. Sign in using the email and password they created."; },
  signingInPic: function(d) { return "Signing in with Picture passwords"; },
  signingInPicIntro: function(d) { return "Have your students do the following to sign in with their picture passwords:"; },
  signingInPic3: function(d) { return "3. Click on their picture password."; },
  signingInWord: function(d) { return "Signing in with Secret Word passwords"; },
  signingInWordIntro: function(d) { return "Have your students do the following to sign in with their secret words:"; },
  signingInWordPic1: function(d) { return "1. Go to [" + d.joinLink + "](" + d.joinLink + ") OR go to [www.code.org](" + d.codeOrgLink + "), click the 'sign in' button and enter the section code " + d.sectionCode + " in the section box."; },
  signingInWordPic2: function(d) { return "2. Click on their name."; },
  signingInWord3: function(d) { return "3. Type in their secret words and hit 'sign in'."; },
  skipPuzzle: function(d) { return "Skip puzzle"; },
  some: function(d) { return "Some"; },
  soundLibrary: function(d) { return "Sound Library"; },
  soundName: function(d) { return "Sound Name"; },
  soundSearchPlaceholder: function(d) { return "Search for a sound..."; },
  specialAnnouncementHeadingPostHoc2019: function(d) { return "Go beyond an Hour of Code"; },
  specialAnnouncementDescriptionPostHoc2019: function(d) { return "An hour is just the beginning. We offer comprehensive curriculum for grades K-12, professional learning programs including local workshops, and resources to help you and your school get started."; },
  sprite: function(d) { return "sprite"; },
  stage: function(d) { return "Stage"; },
  stageExtras: function(d) { return "Lesson Extras"; },
  stageLocked: function(d) { return "Stage is locked."; },
  stageNotFullyLocked: function(d) { return "Stage is not locked for all."; },
  standaloneToolsDescription: function(d) { return "In addition to our courses, teachers can use App Lab and Game Lab in any course to teach students how to create apps, animations, and games in JavaScript. And, we have lessons and widgets to teach encryption, text compression, and other computer science concepts."; },
  standaloneToolsHeading: function(d) { return "Tools for Middle and High School"; },
  standards: function(d) { return "Standards"; },
  standardConcept: function(d) { return "Concept"; },
  standardIdentifier: function(d) { return "Identifier"; },
  standardMappings: function(d) { return "Standard Mappings"; },
  standardsAndFramework: function(d) { return "Curriculum Standards"; },
  standardsAndFrameworkDescription: function(d) { return "Information about curriculum standards alignment for Code.org courses."; },
  standardsGetInvolved: function(d) { return "Get others involved in CS education"; },
  standardsGetInvolvedDetails: function(d) { return "Learn how to get your [administrators](" + d.adminLink + "), [parents](" + d.parentLink + "), and [fellow teachers](" + d.teacherLink + ") involved in CS education."; },
  standardsGetInvolvedDetailsForPrint: function(d) { return "Learn more about how you can support computer science education as an [administrator](" + d.adminLink + "), [parent](" + d.parentLink + "), or [teacher](" + d.teacherLink + ")."; },
  standardsHowTo: function(d) { return "How to use this information"; },
  standardsHowToForPrint: function(d) { return "How to use this report"; },
  standardsHowToDetails: function(d) { return "This report shows how Code.org's [" + d.courseName + "](" + d.courseLink + ") maps to [CSTA Standards](" + d.cstaLink + ") and how many lessons in " + d.courseName + " this class has completed. Completing all lessons for a standards does not automatically indicate mastery of that standard - please use your best judgement to determine how well the class or individual students have learned the course material. For reference, a Code.org lesson is approximately 45 - 65 minutes of instructional time. A \"plugged\" online lesson is considered \"in progress\" when at least 20% of the enrolled students have completed 20% of the lesson.  A \"plugged\" online lesson is considered \"complete\" when 80% of the enrolled students have finished 60% of the lesson. Unplugged lessons can be marked \"complete\" or \"incomplete\" by the teacher."; },
  standardsHowToDetailsForPrint: function(d) { return "This report shows how Code.org's [" + d.courseName + "](" + d.courseLink + ") maps to [CSTA Standards](" + d.cstaLink + ") and how many lessons in " + d.courseName + " this class has completed. Completing all lessons for a standard does not automatically indicate mastery of that standard - please check with your teacher to get specific information about how well the class or individual students have learned the course material. For reference, a Code.org lesson is approximately 45 - 65 minutes of instructional time. A \"plugged\" online lesson is considered \"in progress\" when at least 20% of the enrolled students have completed 20% of the lesson.  A \"plugged\" online lesson is considered \"complete\" when 80% of the enrolled students have finished 60% of the lesson. Unplugged lessons can be marked \"complete\" or \"incomplete\" by the teacher."; },
  standardsReminder: function(d) { return "**Remember:** Completing all lessons for a standard **does not automatically indicate mastery** of that standard - please use your best judgement to determine how well your students have learned course material."; },
  standardsReportHeader: function(d) { return "Class Standards Report"; },
  standardsReportNoUnpluggedLessons: function(d) { return "There are no unplugged lessons in this course."; },
  standardsReportLessonLengthInfo: function(d) { return "*Lessons in this course offer between 45 and 65 minutes of instruction"; },
  startLearning: function(d) { return "Start learning"; },
  startOver: function(d) { return "Start Over"; },
  startOverTitle: function(d) { return "Are you sure you want to start over?"; },
  startOverBody: function(d) { return "This will reset the puzzle to its start state and reset all the data you've added or changed."; },
  statsTableFailure: function(d) { return "Sorry, something went wrong. Please reload the page to try again."; },
  stayHere: function(d) { return "Stay here"; },
  stepIn: function(d) { return "Step in"; },
  stepOut: function(d) { return "Step out"; },
  stepOver: function(d) { return "Step over"; },
  stop: function(d) { return "Stop"; },
  stopFeaturing: function(d) { return "Stop featuring"; },
  stringEquals: function(d) { return "string=?"; },
  student: function(d) { return "Student"; },
  studentAnnouncementSpecial2020Heading: function(d) { return "Learn computer science at home"; },
  studentAnnouncementSpecial2020Body: function(d) { return "Students can continue to learn at home while schools are closed. Take a Code Break with us, or see resources for students, parents, and teachers - including videos, fun tutorials, and projects!"; },
  studentAnnouncementSpecial2020Button: function(d) { return "Get started"; },
  students: function(d) { return "Students"; },
  studentFreeResponseAnswers: function(d) { return "Student free response answers"; },
  studentsInSection: function(d) { return "Students in section: "; },
  studentOverviewTableHeader: function(d) { return "Submission status"; },
  studentsSuccessfullyMovedNotice: function(d) { return "Students successfully moved"; },
  studentsSuccessfullyMovedDetails: function(d) { return d.numStudents + " student(s) were successfully moved from this section to section \"" + d.section + ".\""; },
  studentsSuccessfullyCopiedNotice: function(d) { return "Students successfully copied"; },
  studentsSuccessfullyCopiedDetails: function(d) { return d.numStudents + " student(s) were successfully copied from this section to section \"" + d.section + ".\""; },
  studentAccountsAndProgress: function(d) { return "Student Accounts and Progress"; },
  studentControl: function(d) { return "Individual student control"; },
  studentLockStateInstructions: function(d) { return "Use the table below to control the state for each individual student."; },
  studentName: function(d) { return "Student Name"; },
  studentNameHeader: function(d) { return "Student name"; },
  studentAnswer: function(d) { return "Student answer"; },
  studentTableTeacherDemo: function(d) { return "Me"; },
  submissionTimestamp: function(d) { return "Submission timestamp"; },
  submit: function(d) { return "Submit"; },
  submitAssessment: function(d) { return "Submit your assessment"; },
  submittableComplete: function(d) { return "You cannot edit your assessment after submitting it.  Are you sure?"; },
  submittableIncomplete: function(d) { return "You left some questions incomplete.  You cannot edit your assessment after submitting it.  Are you sure?"; },
  submittableSurveyComplete: function(d) { return "You cannot edit your survey after submitting it. To preserve anonymity, your responses will also be cleared from this page. Are you sure you want to Submit?"; },
  submittableSurveyIncomplete: function(d) { return "You left some questions incomplete. You cannot edit your survey after submitting it. To preserve anonymity, your responses will also be cleared from this page. Are you sure you want to Submit?"; },
  submittableUnsubmit: function(d) { return "Unsubmitting your assessment will reset the submitted time and date.  Are you sure?"; },
  submitted: function(d) { return "Submitted"; },
  submitting: function(d) { return "Submitting..."; },
  submittedOn: function(d) { return "Submitted On:"; },
  submitSurvey: function(d) { return "Submit your survey"; },
  submitYourProject: function(d) { return "Submit your project"; },
  submitYourProjectConfirm: function(d) { return "You cannot edit your project after submitting it, really submit?"; },
  subtitle: function(d) { return "a visual programming environment"; },
  success: function(d) { return "Success!"; },
  summaryAssessmentsOverview: function(d) { return "Multiple choice questions overview"; },
  support: function(d) { return "Support"; },
  switchSection: function(d) { return "Switch section:"; },
  syncClever: function(d) { return "Sync students from Clever"; },
  syncGoogleClassroom: function(d) { return "Sync students from Google Classroom"; },
  syncingYourStudents: function(d) { return "Syncing Your Students"; },
  syncingYourStudentsDescription: function(d) { return "If your Code.org section is ever out of date with your list of students in " + d.loginType + ", click on the \"Sync students from " + d.loginType + "\" button on the [Manage Students](" + d.url + ") tab: "; },
  syntaxErrorMsg: function(d) { return "Your program contains a typo. Please remove line " + d.lineNumber + " and try again."; },
  teacher: function(d) { return "Teacher"; },
  teacherWithColon: function(d) { return "Teacher:"; },
  teachers: function(d) { return "Teachers"; },
  teacherAnnouncementSpecial2020Body: function(d) { return "Students can continue to learn at home while schools are closed. Take a Code Break with us, or see resources for students, parents, and teachers - including videos, fun tutorials, and projects!"; },
  teacherAnnouncementSpecial2020Heading: function(d) { return "Continued learning when schools are closed"; },
  teacherComments: function(d) { return "Teacher comments"; },
  teacherCommunity: function(d) { return "Teacher Community"; },
  teacherCommunityDescription: function(d) { return "Ask questions about curriculum, share ideas from your lessons, and get help from other teachers"; },
  teacherCourseHoc: function(d) { return "Hour of Code"; },
  teacherCourseHocDescription: function(d) { return "If you don’t have time for a full length course, try a one-hour tutorial designed for all ages. Join millions of students and teachers in over 180 countries by starting with an Hour of Code."; },
  teacherCourseHocLinkText: function(d) { return "View more Hour of Code tutorials"; },
  teacherDashboard: function(d) { return "View Teacher Dashboard"; },
  teacherForum: function(d) { return "Teacher Forum"; },
  teacherHomePage: function(d) { return "Teacher home page"; },
  teacherOnly: function(d) { return "For Teachers Only"; },
  teacherPanel: function(d) { return "Teacher Panel"; },
  teacherResources: function(d) { return "Teacher resources"; },
  teacherTabAssessments: function(d) { return "Assessments/Surveys"; },
  teacherTabManageStudents: function(d) { return "Manage Students"; },
  teacherTabProgress: function(d) { return "Progress"; },
  teacherTabProjects: function(d) { return "Projects"; },
  teacherTabStats: function(d) { return "Stats"; },
  teacherTabStatsTextResponses: function(d) { return "Text Responses"; },
  text: function(d) { return "Text"; },
  textVariable: function(d) { return "text"; },
  textToSpeechProfanity: function(d) { return "Your text contains inappropriate language so it will not be played. Please update your project to remove the " + plural(d.profanityCount, 0, en_us, { one: "word", other: "words" }) + " \"" + d.profaneWords + "\".\n"; },
  textToSpeechTruncation: function(d) { return "Your text exceeds our 750 character limit so we have shortened it for you."; },
  thanksForYourResponse: function(d) { return "Thanks for your response!"; },
  thankyou: function(d) { return "Thank you"; },
  thankyouForAnswer: function(d) { return "Thank you for submitting an answer."; },
  thisSprite: function(d) { return "this sprite"; },
  thumbnailWarning: function(d) { return "Note: You must finish running your app to create a thumbnail, before you can publish your app."; },
  timestamp: function(d) { return "Time stamp"; },
  toggleBlocksErrorMsg: function(d) { return "You need to correct an error in your program before it can be shown as blocks."; },
  tooFewBody: function(d) { return "Please select two answers before submitting."; },
  tooFewTitle: function(d) { return "Too few answers."; },
  tooManyBlocks: function(d) { return "too many blocks"; },
  tooManyBlocksMsg: function(d) { return "This puzzle can be solved with <x id='START_SPAN'/><x id='END_SPAN'/> blocks."; },
  tooManyBlocksDescription: function(d) { return "Too Many!"; },
  tooMuchWork: function(d) { return "You made me do a lot of work!  Could you try repeating fewer times?"; },
  toolboxHeader: function(d) { return "Blocks"; },
  toolboxHeaderDroplet: function(d) { return "Toolbox"; },
  too_young: function(d) { return "This content has age restrictions in place and is not available for younger students."; },
  topCenter: function(d) { return "top center"; },
  topCourseExplanation: function(d) { return "Continue lesson to jump to where you left off or view the whole course to see an overview of your progress."; },
  topCourseLessonIntro: function(d) { return "You are currently working on " + d.lessonName + "."; },
  topLeft: function(d) { return "top left"; },
  topRight: function(d) { return "top right"; },
  tos: function(d) { return "Terms of Service"; },
  tosLong: function(d) { return "This project has been reported for violating Code.org's [Terms of Service](" + d.url + ") and cannot be shared with others."; },
  totalNumLinesOfCodeWritten: function(d) { return "All-time total: " + plural(d.numLines, 0, en_us, { one: "1 line", other: number(d.numLines, "numLines") + " lines" }) + " of code."; },
  tryAgain: function(d) { return "Try again"; },
  tryBlocksBelowFeedback: function(d) { return "Try using one of the blocks below:"; },
  tryHOC: function(d) { return "Try the Hour of Code"; },
  tryHourOfCode: function(d) { return "Try an Hour of Code!"; },
  tryIt: function(d) { return "Try it"; },
  tryNow: function(d) { return "Try Now"; },
  tutorialUnavailable: function(d) { return "Tutorial unavailable for younger students"; },
  tutorialUnavailableExplanation: function(d) { return "Sorry, this tutorial is not available for younger students unless they signed in as part of a classroom with a teacher. We have many more tutorials for all ages."; },
  typeName: function(d) { return "(Type your first and last name below):"; },
  unassign: function(d) { return "Unassign"; },
  unattachedBlockTipTitle: function(d) { return "Unattached blocks"; },
  unattachedBlockTipBody: function(d) { return "Blocks that are not attached will not do anything. If you want these blocks in your program, try connecting them to other blocks."; },
  unexpectedError: function(d) { return "An unexpected error occurred, please try again. If this keeps happening, try reloading the page."; },
  unfeatured: function(d) { return "Unfeatured"; },
  unhideAndAssignHeader: function(d) { return "This unit is currently hidden from the section"; },
  unhideUnitAndAssign: function(d) { return "Unhide unit and assign"; },
  unnamedFunction: function(d) { return "You have a variable or function that does not have a name. Don't forget to give everything a descriptive name."; },
  unplugged: function(d) { return "Unplugged"; },
  unpluggedActivity: function(d) { return "Unplugged Activity"; },
  unpublish: function(d) { return "Unpublish"; },
  unpublishPending: function(d) { return "Unpublishing..."; },
  unpublishFailureTitle: function(d) { return "Unpublish Failed"; },
  unpublishFailureBody: function(d) { return "We failed to unpublish your library, \"" + d.libraryName + ".\" Please check your internet connection and try again."; },
  updateFirmware: function(d) { return "Update Firmware"; },
  updateFirmwareExplanation: function(d) { return "This board is not using the most up-to-date version of the firmware. "; },
  updateFirmwareExplanationClassic: function(d) { return "For best results, please update the firmware by clicking on the button below."; },
  updateFirmwareExplanationExpress: function(d) { return "For best results, please update the firmware by clicking on the button below and following the instructions on the Adafruit website."; },
  updateLibraryConfirmation: function(d) { return "Are you sure you want to update " + d.libraryName + "?"; },
  updateUnpluggedLessonProgress: function(d) { return "Update unplugged lesson progress"; },
  updateUnpluggedLessonProgressSubHeading: function(d) { return "Make sure your report accurately reflects the unplugged lessons* your class has worked on."; },
  updateUnpluggedProgress: function(d) { return "Update unplugged progress"; },
  usernameLabel: function(d) { return "Username: "; },
  useToView: function(d) { return "You can use this view to:"; },
  useToViewList1: function(d) { return "Keep track of your class’s **progress on standards**"; },
  useToViewList2: function(d) { return "Update your **progress on unplugged lessons** so your report is accurate and up-to-date"; },
  useToViewList3: function(d) { return "**Generate a PDF report** to save or share with administrators or parents"; },
  usingHints: function(d) { return "Using hints"; },
  usingTooManyBlocks: function(d) { return "Using too many blocks"; },
  uncompletedLessons: function(d) { return "Lesson not completed"; },
  unsubmit: function(d) { return "Unsubmit"; },
  unsubmitAssessment: function(d) { return "Unsubmit your assessment"; },
  unsubmitYourProject: function(d) { return "Unsubmit your project"; },
  unsubmitYourProjectConfirm: function(d) { return "Unsubmitting your project will reset the submitted date, really unsubmit?"; },
  update: function(d) { return "Update"; },
  uploadFile: function(d) { return "Upload File"; },
  usingOneHint: function(d) { return "Using just one hint!"; },
  validationStepBoardPluggedIn: function(d) { return "Board plugged in"; },
  validationStepBoardConnectable: function(d) { return "Board connectable"; },
  validationStepBoardComponentsUsable: function(d) { return "Board components usable"; },
  validationStepBoardFirmware: function(d) { return "Board firmware up-to-date"; },
  verifiedResourcesDetails: function(d) { return "This course provides extra resources which are only available to verified teachers."; },
  verifiedResourcesNotice: function(d) { return "Accessing locked lessons and answer keys"; },
  verifyStatementsforCode: function(d) { return "Please verify the following statements before you can receive a code."; },
  verifySignature: function(d) { return "By signing below you commit to teach the second semester of CS Discoveries, including Unit 6, by the '20-'21 school year."; },
  verifySingleCode: function(d) { return "I have not received or used another discount code from Code.org to purchase a Circuit Playground kit."; },
  verifyStudentCount: function(d) { return "I taught Units 1, 2, and 3 of Code.org's CS Discoveries curriculum to a classroom of at least 10 students."; },
  verifyYear: function(d) { return "I plan on teaching Unit 6 (Physical Computing) of CS Discoveries to a classroom of at least 10 students by the end of the '20-'21 school year."; },
  version: function(d) { return "Version"; },
  versionHistory_ajaxFailure: function(d) { return "An error occurred."; },
  versionHistory_clearProgress_prompt: function(d) { return "Are you sure you want to clear all progress for this level?"; },
  versionHistory_clearProgress_confirm: function(d) { return "Start over"; },
  versionHistory_clearProgress_cancel: function(d) { return "Cancel"; },
  versionHistory_initialVersion_label: function(d) { return "Initial version"; },
  versionHistory_header: function(d) { return "Version History"; },
  versionHistory_versionLabel: function(d) { return "Version from " + d.timestamp; },
  video: function(d) { return "Video"; },
  videos: function(d) { return "Videos"; },
  viewAllAnnouncements: function(d) { return "View all announcements"; },
  viewAllCourses: function(d) { return "View all courses"; },
  viewAllSections: function(d) { return "View all sections"; },
  viewArchivedSections: function(d) { return "View archived sections"; },
  viewBy: function(d) { return "View By"; },
  viewCode: function(d) { return "View code"; },
  viewCourse: function(d) { return "View course"; },
  viewCourses: function(d) { return "View courses"; },
  viewFeedback: function(d) { return "Review feedback from your teacher"; },
  viewFeedbackButton: function(d) { return "Go to feedback"; },
  viewFeedbackDescription: function(d) { return "See all the feedback your teacher has left for you on your Code.org coursework."; },
  viewFullList: function(d) { return "View full list"; },
  viewHiddenSections: function(d) { return "View hidden sections"; },
  viewingSection: function(d) { return "Viewing section:"; },
  viewMyRecentCourses: function(d) { return "View my recent courses"; },
  viewLessonPlan: function(d) { return "View Lesson Plan"; },
  viewMyProjects: function(d) { return "View my projects"; },
  viewMore: function(d) { return "View more"; },
  viewPageAs: function(d) { return "View page as:"; },
  viewParentLetter: function(d) { return "View parent letter"; },
  viewSection: function(d) { return "View section"; },
  viewUnitOverview: function(d) { return "View Unit Overview"; },
  visible: function(d) { return "Visible"; },
  visualizeData: function(d) { return "Visualize Data"; },
  vocabulary: function(d) { return "Vocabulary"; },
  volunteer: function(d) { return "Volunteer/Community Advocate"; },
  wantToLearn: function(d) { return "Want to learn to code?"; },
  warning: function(d) { return "Warning"; },
  watchVideo: function(d) { return "Watch the Video"; },
  welcomeToDanceParty: function(d) { return "Welcome to Dance Party!"; },
  when: function(d) { return "when"; },
  whenRun: function(d) { return "when run"; },
  whichCourse: function(d) { return "Assign a course so that your students go directly to the right course after signing in. Don't know which course to teach? Find a course from the courses page to assign a course to your section later."; },
  withoutHints: function(d) { return "Without using any hints!"; },
  workedWith: function(d) { return "Worked With:"; },
  workshopDate: function(d) { return "Workshop Date"; },
  workspaceHeaderShort: function(d) { return "Workspace"; },
  workspaceProjectTemplateLevel: function(d) { return "This icon means that this level is part of a larger project. Changes will be saved across these levels."; },
  wrongCourseVersionWarningNotice: function(d) { return "You’re in a newer version of this course"; },
  wrongCourseVersionWarningDetails: function(d) { return "We noticed you have progress in an older version of this course. You can go back to that version any time by using the dropdown below to select the version of the course you want."; },
  wrongUnitVersionWarningDetails: function(d) { return "We noticed you have progress in an older version of this course. You can go back to that version any time by going to the course page and selecting the version of the course you want."; },
  yes: function(d) { return "Yes"; },
  yesNo: function(d) { return "Yes / No"; },
  yesSure: function(d) { return "Yes, I'm sure"; },
  youCannotUndoThisAction: function(d) { return "You cannot undo this action."; },
  yourEmail: function(d) { return "Private contact email"; },
  yourEmailPlaceholder: function(d) { return "you@example.com"; },
  yourName: function(d) { return "Your name"; },
  yourSchoolAdminButton: function(d) { return "View administrator guide"; },
  yourSchoolAdminDesc: function(d) { return "View resources on how to get started or expand opportunities"; },
  yourSchoolProfessionalLearningProgramsButton: function(d) { return "View professional learning programs"; },
  yourSchoolDescription: function(d) { return "Join the thousands of schools who have already incorporated high quality computer science education into their curriculum and provide opportunities for the students in your local area."; },
  yourSchoolHeading: function(d) { return "Expand computer science at your school or district"; },
  yourSchoolMapDesc: function(d) { return "Tell us what computer science offerings are available at your local school and, if you're an educator, make a pledge to help expand that access even further! "; },
  yourSchoolParentButton: function(d) { return "Take action"; },
  yourSchoolParentDesc: function(d) { return "Take action to expand computer science in your school or district"; },
  yourSchoolTeacherButton: function(d) { return "Start teaching"; },
  yourSchoolTeacherDesc: function(d) { return "Start teaching today, no computer science experience necessary"; },
  yourSchoolTellUs: function(d) { return "Tell us about your school"; }
};
